{"version":3,"sources":["webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/index.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/button/button.component.html","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/button/button.component.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/button/button.module.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/checkbox.component.html","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/checkbox.component.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/custom-input-component.abstract.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/form-element.component.html","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/form-element.component.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/form-errors.component.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/form.module.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/input-field.component.html","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/input-field.component.scss","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/input-field.component.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/radiobutton.component.html","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/radiobutton.component.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/textarea.component.html","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/textarea.component.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/validation/custom-validators.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/validation/index.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/validation/required-true.directive.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/form/validation/validate-messsage.service.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/search-field/search-field.component.html","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/search-field/search-field.component.scss","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/search-field/search-field.component.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/search-field/search-field.module.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/svg-icon/svg-icon.component.html","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/svg-icon/svg-icon.component.scss","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/svg-icon/svg-icon.component.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/svg-icon/svg-icon.module.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/text/text.component.html","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/text/text.component.scss","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/text/text.component.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/ui-core/src/lib/text/text.module.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/util-core/src/index.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/util-core/src/lib/currency-format/currency-format.module.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/util-core/src/lib/currency-format/currency-format.pipe.ts","webpack:////Users/mel/holng/dev/layout/hdms/libs/shared/util-core/src/lib/window-ref/window-ref.service.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bootstrap-grid-usecases/bootstrap-grid-usecases.component.html","webpack:///./src/app/bootstrap-grid-usecases/bootstrap-grid-usecases.component.ts","webpack:///./src/app/bootstrap-grid-usecases/bootstrap-grid-usecases.module.ts","webpack:///./src/app/css-grid-usecases/css-grid-product-tile/css-grid-product-tile.component.html","webpack:///./src/app/css-grid-usecases/css-grid-product-tile/css-grid-product-tile.component.scss","webpack:///./src/app/css-grid-usecases/css-grid-product-tile/css-grid-product-tile.component.ts","webpack:///./src/app/css-grid-usecases/css-grid-usecases.component.html","webpack:///./src/app/css-grid-usecases/css-grid-usecases.component.scss","webpack:///./src/app/css-grid-usecases/css-grid-usecases.component.ts","webpack:///./src/app/css-grid-usecases/css-grid-usecases.module.ts","webpack:///./src/app/forms/forms-example.component.html","webpack:///./src/app/forms/forms-example.component.ts","webpack:///./src/app/forms/forms-example.module.ts","webpack:///./src/app/graphql-example/components/graphql-showcase-service/graphql-showcase-service.component.html","webpack:///./src/app/graphql-example/components/graphql-showcase-service/graphql-showcase-service.component.scss","webpack:///./src/app/graphql-example/components/graphql-showcase-service/graphql-showcase-service.component.ts","webpack:///./src/app/graphql-example/components/graphql-showcase/graphql-showcase.component.html","webpack:///./src/app/graphql-example/components/graphql-showcase/graphql-showcase.component.scss","webpack:///./src/app/graphql-example/components/graphql-showcase/graphql-showcase.component.ts","webpack:///./src/app/graphql-example/graphql-example.module.ts","webpack:///./src/app/graphql-example/graphql.module.ts","webpack:///./src/app/graphql-example/pages/graphql-example/graphql-example.component.html","webpack:///./src/app/graphql-example/pages/graphql-example/graphql-example.component.ts","webpack:///./src/app/graphql-example/services/all-films.graphql.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/pages/home/home.component.html","webpack:///./src/app/home/pages/home/home.component.ts","webpack:///./src/app/mock-example/mock-example.component.html","webpack:///./src/app/mock-example/mock-example.component.scss","webpack:///./src/app/mock-example/mock-example.component.ts","webpack:///./src/app/mock-example/mock-example.mock.ts","webpack:///./src/app/mock-example/mock-example.module.ts","webpack:///./src/app/mock-example/mock-example.service.ts","webpack:///./src/app/pipes-showcase/pipes-showcase.component.html","webpack:///./src/app/pipes-showcase/pipes-showcase.component.ts","webpack:///./src/app/pipes-showcase/pipes-showcase.module.ts","webpack:///./src/app/translation/i18next-translation.module.ts","webpack:///./src/app/translation/translation.component.html","webpack:///./src/app/translation/translation.component.scss","webpack:///./src/app/translation/translation.component.ts","webpack:///./src/app/translation/translation.module.ts","webpack:///./src/app/window-ref/window-ref.component.html","webpack:///./src/app/window-ref/window-ref.component.ts","webpack:///./src/app/window-ref/window-ref.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export * from './lib/form/form.module';\nexport * from './lib/svg-icon/svg-icon.module';\nexport * from './lib/search-field/search-field.module';\nexport * from './lib/text/text.module';\nexport * from './lib/button/button.module';\nexport * from './lib/form/validation';\n","module.exports = \"<button [type]=\\\"type\\\" [ngClass]=\\\"buttonClass\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" (click)=\\\"onClickButton($event)\\\">\\n  <ng-content select=\\\"[iconBefore]\\\"></ng-content>\\n  <ng-content select=\\\"[label]\\\"></ng-content>\\n  <ng-content select=\\\"[iconAfter]\\\"></ng-content>\\n</button>\\n\"","import { Component, OnInit, Input, ElementRef, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'ui-core-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent implements OnInit {\n  buttonClass = 'btn';\n  readonly buttonBaseClasses = {\n    primary: 'primary',\n    primaryInverse: 'primary-inverse',\n    secondary: 'outline-secondary',\n    tertiary: 'outline-tertiary',\n    tertiaryAlt: 'outline-tertiary-alt',\n    link: 'link',\n    dropdown: 'dropdown'\n  };\n\n  @Input() variant = 'primary';\n  @Input() type = 'button';\n  @Input() disabled = false;\n  @Input() name: string;\n  @Input() buttonClasses: string;\n\n  @Output() click = new EventEmitter<any>();\n\n  constructor(private readonly element: ElementRef) {}\n\n  ngOnInit() {\n    const nativeElement = this.element.nativeElement;\n    const iconBefore = nativeElement.querySelector('[iconBefore]');\n    const iconAfter = nativeElement.querySelector('[iconAfter]');\n\n    this.buttonClass += ` btn-${this.buttonBaseClasses[this.variant] || 'primary'} ${this.buttonClasses}`;\n\n    if (iconBefore) {\n      this.buttonClass += ' has-icon-before';\n    }\n    if (iconAfter) {\n      this.buttonClass += ' has-icon-after';\n    }\n  }\n\n  onClickButton(event) {\n    this.click.emit(event);\n    event.stopPropagation();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SvgIconModule } from '../svg-icon/svg-icon.module';\nimport { ButtonComponent } from './button.component';\n\n@NgModule({\n  declarations: [ButtonComponent],\n  imports: [CommonModule, SvgIconModule],\n  exports: [ButtonComponent]\n})\nexport class ButtonModule {}\n","module.exports = \"<input\\n  type=\\\"checkbox\\\"\\n  class=\\\"custom-control-input\\\"\\n  #inputRef\\n  [name]=\\\"name\\\"\\n  [id]=\\\"inputId\\\"\\n  [formControl]=\\\"control\\\"\\n  [checked]=\\\"value\\\"\\n/>\\n<label class=\\\"custom-control-label\\\" [attr.for]=\\\"inputId\\\">\\n  <ng-content></ng-content>\\n</label>\\n\"","import { Component, Host, HostBinding, Inject, Optional } from '@angular/core';\nimport { CustomInputComponentAbstract, MakeProviders } from './custom-input-component.abstract';\nimport { ControlContainer, NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '@angular/forms';\n\n@Component({\n  selector: 'ui-core-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: MakeProviders(CheckboxComponent)\n})\nexport class CheckboxComponent extends CustomInputComponentAbstract {\n  @HostBinding('class') classList = 'custom-control custom-checkbox';\n\n  constructor(\n    @Optional() @Inject(NG_VALIDATORS) validators: Array<any>,\n    @Optional() @Inject(NG_ASYNC_VALIDATORS) asyncValidators: Array<any>,\n    @Optional() @Host() controlContainer: ControlContainer\n  ) {\n    super(validators, asyncValidators, controlContainer);\n  }\n}\n","import {\n  forwardRef,\n  Input,\n  ElementRef,\n  ViewChild,\n  OnInit,\n  HostBinding,\n  HostListener,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  AsyncValidatorFn,\n  ControlContainer,\n  ControlValueAccessor,\n  FormControl,\n  NG_VALUE_ACCESSOR,\n  NgForm,\n  ValidationErrors,\n  ValidatorFn\n} from '@angular/forms';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nexport abstract class CustomInputComponentAbstract implements ControlValueAccessor, OnInit {\n  protected _value = '';\n  protected _disabled = false;\n  protected _touched = false;\n  protected isNgForm: boolean;\n  protected formControl: FormControl;\n\n  @ViewChild('inputRef', { read: ElementRef }) inputElementRef: ElementRef;\n  @HostBinding('class') classList = '';\n\n  @Input() class: string;\n  @Input() name: string;\n  @Input() inputId: string;\n  @Input() formControlName: string;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    // allow setting an empty value as true\n    value = value !== false;\n\n    if (value !== this._disabled && this.inputElementRef && this.formControl) {\n      this._disabled = value;\n      this.inputElementRef.nativeElement.disabled = value;\n      this._disabled ? this.formControl.disable() : this.formControl.enable();\n      this.onDisabledChange(value);\n    }\n  }\n\n  @Input()\n  get value(): any {\n    return this._value;\n  }\n\n  set value(v: any) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n    }\n  }\n\n  @Output() focusOut: EventEmitter<boolean> = new EventEmitter<false>();\n\n  @HostListener('focusout')\n  private onFocusOut(): void {\n    this.onTouched();\n    this._touched = true;\n    this.focusOut.emit(true);\n  }\n\n  get errors(): ValidationErrors {\n    return this.formControl.errors;\n  }\n\n  get touched(): boolean {\n    return this._touched;\n  }\n\n  get control(): FormControl {\n    return this.formControl;\n  }\n\n  protected constructor(\n    validators: ValidatorFn | ValidatorFn[] = null,\n    asyncValidators: AsyncValidatorFn | AsyncValidatorFn[] = null,\n    private readonly controlContainer: ControlContainer\n  ) {\n    this.isNgForm = this.controlContainer && this.controlContainer.formDirective instanceof NgForm;\n\n    // usage inside a template-driven form\n    if (this.isNgForm) {\n      this.formControl = new FormControl();\n      this.formControl.setValidators(validators);\n      this.formControl.setAsyncValidators(asyncValidators);\n    }\n  }\n\n  ngOnInit(): void {\n    // reactive form usage, so get the formControl from ControlContainer instance\n    if (!this.formControl) {\n      this.formControl =\n        (this.controlContainer && (this.controlContainer.control.get(this.formControlName) as FormControl)) ||\n        new FormControl();\n    }\n\n    this.formControl.valueChanges.pipe(distinctUntilChanged()).subscribe(value => {\n      this.value = value;\n    });\n\n    if (!this.inputId) {\n      this.inputId = this.name;\n    }\n    if (this.class) {\n      this.classList += ` ${this.class}`;\n    }\n  }\n\n  /**\n   * Invoked when the model has been changed\n   */\n  onChange: (_: any) => void = (_: any) => {};\n\n  /**\n   * Invoked when the model has been touched\n   */\n  onTouched: () => void = () => {};\n\n  /**\n   * Invoked when `disabled` property has been changed\n   */\n  onDisabledChange: (_: any) => void = (_: any) => {};\n\n  ///////////////\n  // OVERRIDES //\n  ///////////////\n\n  /**\n   * Writes a new item to the element.\n   * @param value the value\n   */\n  writeValue(value: any): void {\n    if (value) {\n      this._value = value;\n      if (this.isNgForm) {\n        this.formControl.setValue(value);\n      }\n    }\n  }\n\n  /**\n   * Registers a callback function that should be called when the control's value changes in the UI.\n   * @param fn\n   */\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Registers a callback function that should be called when the control receives a blur event.\n   * @param fn\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  registerOnDisabledChange(fn: any): void {\n    this.onDisabledChange = fn;\n  }\n}\n\n// helper to create providers from custom input component\nexport function MakeProviders(type: any) {\n  return [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => type),\n      multi: true\n    },\n    {\n      provide: CustomInputComponentAbstract,\n      useExisting: forwardRef(() => type),\n      multi: true\n    }\n  ];\n}\n","module.exports = \"<div class=\\\"form-group\\\" [ngClass]=\\\"{ 'box-group': !useFieldset }\\\">\\n  <fieldset class=\\\"w-100\\\" *ngIf=\\\"useFieldset; else contentTPL\\\">\\n    <div class=\\\"box-group\\\">\\n      <ng-container *ngTemplateOutlet=\\\"contentTPL\\\"></ng-container>\\n    </div>\\n  </fieldset>\\n\\n  <ng-template #labelTPL>\\n    <div [class.text-disabled]=\\\"allDisabled\\\">\\n      {{ label }}\\n      <span *ngIf=\\\"required\\\">*</span>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #contentTPL>\\n    <ng-container *ngIf=\\\"label\\\">\\n      <div class=\\\"box\\\" [ngClass]=\\\"labelColumnClasses\\\">\\n        <label class=\\\"mb-0 mt-0\\\" *ngIf=\\\"!useFieldset\\\" [for]=\\\"labelForId\\\">\\n          <ng-container *ngTemplateOutlet=\\\"labelTPL\\\"></ng-container>\\n        </label>\\n        <legend class=\\\"mb-0 mt-0\\\" *ngIf=\\\"useFieldset\\\">\\n          <ng-container *ngTemplateOutlet=\\\"labelTPL\\\"></ng-container>\\n        </legend>\\n      </div>\\n    </ng-container>\\n    <div class=\\\"box\\\" [ngClass]=\\\"inputColumnClasses\\\">\\n      <ng-content></ng-content>\\n      <ui-core-form-errors class=\\\"mt-0\\\" *ngIf=\\\"hasErrors\\\" [messages]=\\\"errorMessages\\\"></ui-core-form-errors>\\n    </div>\\n  </ng-template>\\n</div>\\n\"","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  Input,\n  QueryList,\n  HostBinding,\n  Inject,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { AbstractControl, ControlContainer, FormControl, NgForm } from '@angular/forms';\nimport { CustomInputComponentAbstract } from './custom-input-component.abstract';\nimport { ValidateMesssageService } from './validation';\nimport { InputFieldComponent } from './input-field.component';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { merge, Subject } from 'rxjs';\nimport { TextareaComponent } from './textarea.component';\n\n@Component({\n  selector: 'ui-core-form-element',\n  templateUrl: './form-element.component.html'\n})\nexport class FormElementComponent implements AfterContentInit, OnDestroy {\n  @ContentChildren(CustomInputComponentAbstract) private readonly inputComponentList: QueryList<\n    CustomInputComponentAbstract\n  >;\n\n  @Input() label: string;\n  @Input() labelColumnClasses: string;\n  @Input() inputColumnClasses: string;\n\n  @HostBinding('class') classList = 'w-100';\n\n  labelForId: string;\n  useFieldset: boolean;\n  hasErrors = false;\n  errorMessages: Array<string>;\n  allDisabled = false;\n  required = false;\n\n  private uniqueFormControls: FormControl[];\n  private readonly form: NgForm;\n  private readonly ngUnsubscribe: Subject<void> = new Subject();\n\n  constructor(\n    @Optional() @Inject(NgForm) protected ngForm: NgForm,\n    @Optional() @Inject(ControlContainer) private readonly controlContainer: ControlContainer,\n    private readonly validateMesssageService: ValidateMesssageService\n  ) {\n    this.form = ngForm || (controlContainer.formDirective as NgForm);\n  }\n\n  ngAfterContentInit(): void {\n    if (this.inputComponentList.length === 0) {\n      throw new Error('For content projection only type of CustomInputComponentAbstract allowed!');\n    }\n\n    this.useFieldset = this.inputComponentList.length > 1;\n\n    this.uniqueFormControls = Array.from(new Set(this.inputComponentList.map(component => component.control)));\n\n    this.prepareLabels();\n\n    this.subscribeToErrors();\n\n    this.subscribeToStatusChanges();\n    this.setAllDisabledState();\n\n    this.checkRequired();\n  }\n\n  /**\n   * set up input/label relation\n   * when fieldset used or no label provided activate screeenreader label\n   */\n  private prepareLabels(): void {\n    if (this.inputComponentList.length === 1) {\n      this.labelForId = this.inputComponentList.first.inputId;\n    }\n\n    if (this.useFieldset || !this.label) {\n      const useScreenReaderLabelProp = 'useScreenReaderLabel';\n      this.inputComponentList\n        .filter(component => component.hasOwnProperty(useScreenReaderLabelProp))\n        .forEach(component => {\n          component[useScreenReaderLabelProp] = true;\n        });\n    }\n  }\n\n  /**\n   * subscribe to all events where potential validation errors could occur\n   */\n  private subscribeToErrors(): void {\n    const valueChanges$ = this.uniqueFormControls.map(control => control.valueChanges.pipe(distinctUntilChanged())),\n      inputFieldFocusOut$ = this.inputComponentList\n        .filter(component => component instanceof InputFieldComponent || component instanceof TextareaComponent)\n        .map(component => component.focusOut);\n\n    merge(this.form.ngSubmit, ...valueChanges$, ...inputFieldFocusOut$)\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(this.setErrorMessages.bind(this));\n  }\n\n  /**\n   * subscribe to contained components statusChanges\n   */\n  private subscribeToStatusChanges(): void {\n    const statusChanges$ = this.uniqueFormControls.map(control => control.statusChanges.pipe(distinctUntilChanged()));\n    merge(...statusChanges$)\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(this.setAllDisabledState.bind(this));\n  }\n\n  /**\n   * retrieve validation errors from contained form controls\n   */\n  private setErrorMessages(): void {\n    const uniqueErrors = new Set();\n    this.hasErrors = false;\n\n    this.inputComponentList\n      .filter(component => component.errors && !component.disabled && (component.touched || this.form.submitted))\n      .forEach(component => {\n        const errors = component.errors;\n        Object.keys(errors).forEach(key => {\n          // get error message from service and add it to the list\n          uniqueErrors.add(this.validateMesssageService.getMessage(errors, key));\n        });\n\n        this.hasErrors = true;\n      });\n\n    if (this.hasErrors) {\n      // display the messages\n      this.errorMessages = Array.from(uniqueErrors);\n    }\n  }\n\n  /**\n   * set disabled state depending on each contained input control's disabled state\n   */\n  setAllDisabledState(): void {\n    this.allDisabled = !this.uniqueFormControls.some(control => control.enabled);\n  }\n\n  /**\n   * checks if some controls are required\n   */\n  checkRequired(): void {\n    this.required = this.uniqueFormControls\n      .map(ctrl => (ctrl.validator && ctrl.validator({} as AbstractControl)) || {})\n      .some(validator => validator.required || validator.requiredTrue);\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ui-core-form-errors',\n  template: `\n    <div *ngFor=\"let message of messages\">{{ message }}</div>\n  `\n})\nexport class FormErrorsComponent implements OnInit {\n  @HostBinding('class') classList = 'invalid-feedback d-block';\n  @Input() messages: Array<string>;\n  @Input() class: string;\n\n  ngOnInit(): void {\n    if (this.class) {\n      this.classList += ` ${this.class}`;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { InputFieldComponent } from './input-field.component';\nimport { TextareaComponent } from './textarea.component';\nimport { RadiobuttonComponent } from './radiobutton.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { FormElementComponent } from './form-element.component';\nimport { FormErrorsComponent } from './form-errors.component';\nimport { RequiredTrueDirective } from './validation';\n\n@NgModule({\n  declarations: [\n    InputFieldComponent,\n    TextareaComponent,\n    RadiobuttonComponent,\n    CheckboxComponent,\n    FormElementComponent,\n    FormErrorsComponent,\n    RequiredTrueDirective\n  ],\n  imports: [FormsModule, CommonModule, ReactiveFormsModule],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    InputFieldComponent,\n    TextareaComponent,\n    RadiobuttonComponent,\n    CheckboxComponent,\n    FormElementComponent,\n    RequiredTrueDirective\n  ]\n})\nexport class FormModule {}\n","module.exports = \"<label [for]=\\\"inputId\\\" class=\\\"sr-only\\\" *ngIf=\\\"useScreenReaderLabel\\\">\\n  {{ screenReaderLabel || placeholder }}\\n</label>\\n<input\\n  type=\\\"text\\\"\\n  class=\\\"form-control\\\"\\n  #inputRef\\n  [name]=\\\"name\\\"\\n  [id]=\\\"inputId\\\"\\n  [formControl]=\\\"control\\\"\\n  [placeholder]=\\\"placeholder\\\"\\n  [value]=\\\"value\\\"\\n/>\\n\"","module.exports = \"/*\\n * functions definition\\n */\\n/***\\n * original import\\n */\\n/***\\n * Patch / extend\\n */\\n/*\\n * scss helper functions\\n * TODO: finish or review implementation / remove if not needed\\n */\\n/**\\n * returns a font value from the definition\\n */\\n/**\\n * returns a color value from the definition\\n */\\n/**\\n * returns a spacing value from the definition\\n */\\n/**\\n * Remove the unit of a value\\n */\\n/**\\n * tests value if integer\\n */\\n/**\\n * retrieve multiple of baseline\\n */\\n/**\\n * helper to return the calc function for baseline with border\\n */\\n/**\\n * convert rem values to px based on default font size of 16px\\n */\\n/*\\n * hdms variable definitions\\n */\\n/********************\\n * Fonts definitions\\n * Design spec: Definitions see https://fork.invisionapp.com/d/main#/console/17301588/358610542/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/* Not used at the moment.\\n$baseline-hilti-extended: 0.185;\\n$baseline-hilti-heavy-extended: 0.185;\\n$baseline-arial: 0.153320;\\n$baseline-monospace: 0.162;\\n*/\\n/*\\n * Color definitions end\\n ********************/\\n/********************\\n * Color definitions\\n * Design spec: Definitions see https://fork.invisionapp.com/d/main/#/console/17301588/358610505/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/*\\n * Color definitions end\\n ********************/\\n/********************\\n * Grid system\\n * Design spec:\\n * Breakpoints: https://fork.invisionapp.com/d/main#/console/17301588/358610513/preview\\n * Mobile: https://fork.invisionapp.com/d/main#/console/17301588/358610515/preview\\n * Tablet: https://fork.invisionapp.com/d/main#/console/17301588/358610516/preview\\n * Desktop+: https://fork.invisionapp.com/d/main#/console/17301588/358610517/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/*\\n * Grid system end\\n ********************/\\n/********************\\n * Heights\\n */\\n/*\\n * Heights end\\n ********************/\\n/********************\\n * Sizing\\n */\\n/*\\n * Sizing end\\n ********************/\\n/********************\\n * Spacings\\n * Design spec:\\n * https://fork.invisionapp.com/d/main#/console/17301588/358610511/preview\\n * https://fork.invisionapp.com/d/main#/console/17301588/358610510/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/*\\n * Spacings end\\n ********************/\\n/********************\\n * Custom forms\\n */\\n/*\\n * Custom forms end\\n ********************/\\n/********************\\n * Layout helper classes\\n * Documentation: https://confluence.hilti.com/display/pshilti/Layout\\n */\\n/*\\n * Layout helper classes end\\n ********************/\\n/*\\n * global mixin definitions\\n * TODO: finish or review implementation / remove if not needed\\n */\\n/*\\n * variables definition\\n */\\n/***\\n * original import\\n */\\n/***\\n * Patch / extend\\n */\\n/*\\n * mixins definition\\n */\\n/***\\n * original import\\n */\\n/***\\n * Patch / extend\\n */\\n/**\\n * HILTI specific modifications:\\n * $border property: if plumber applied on elements with borders, these need to be subtracted from padding\\n */\\n/*\\n * Plumber baseline definition file\\n */\\n:host-context(.search-field) .form-control {\\n  padding-right: 40px;\\n  padding-right: 2.5rem; }\\n:host-context(.header-variant) .form-control:not(:disabled) {\\n  border-color: #d2051e; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, Input, HostBinding, Inject, Optional, Host } from '@angular/core';\nimport { CustomInputComponentAbstract, MakeProviders } from './custom-input-component.abstract';\nimport { ControlContainer, NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '@angular/forms';\n\n@Component({\n  selector: 'ui-core-input-field',\n  templateUrl: './input-field.component.html',\n  styleUrls: ['./input-field.component.scss'],\n  providers: MakeProviders(InputFieldComponent)\n})\nexport class InputFieldComponent extends CustomInputComponentAbstract {\n  @Input() placeholder = '';\n  @Input() screenReaderLabel: string;\n  @Input() useScreenReaderLabel = false;\n  @HostBinding('class') classList = 'ui-core-input-field';\n  @HostBinding('class.is-disabled') isDisabled = false;\n\n  constructor(\n    @Optional() @Inject(NG_VALIDATORS) validators: Array<any>,\n    @Optional() @Inject(NG_ASYNC_VALIDATORS) asyncValidators: Array<any>,\n    @Optional() @Host() controlContainer: ControlContainer\n  ) {\n    super(validators, asyncValidators, controlContainer);\n  }\n}\n","module.exports = \"<input\\n  type=\\\"radio\\\"\\n  class=\\\"custom-control-input\\\"\\n  #inputRef\\n  [name]=\\\"name\\\"\\n  [id]=\\\"inputId\\\"\\n  [formControl]=\\\"control\\\"\\n  [value]=\\\"radioValue\\\"\\n  [checked]=\\\"radioValue == value\\\"\\n/>\\n<label class=\\\"custom-control-label\\\" [for]=\\\"inputId\\\">\\n  <ng-content></ng-content>\\n</label>\\n\"","import { Component, Input, HostBinding, OnInit, Inject, Optional, Host } from '@angular/core';\nimport { CustomInputComponentAbstract, MakeProviders } from './custom-input-component.abstract';\nimport { ControlContainer, NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '@angular/forms';\n\nlet increment = 0;\n\n@Component({\n  selector: 'ui-core-radiobutton',\n  templateUrl: './radiobutton.component.html',\n  providers: MakeProviders(RadiobuttonComponent)\n})\nexport class RadiobuttonComponent extends CustomInputComponentAbstract implements OnInit {\n  @HostBinding('class') classList = 'custom-control custom-radio';\n  // tslint:disable-next-line:no-input-rename\n  @Input('value') radioValue: any;\n\n  private readonly idPostFix = increment;\n\n  constructor(\n    @Optional() @Inject(NG_VALIDATORS) validators: Array<any>,\n    @Optional() @Inject(NG_ASYNC_VALIDATORS) asyncValidators: Array<any>,\n    @Optional() @Host() controlContainer: ControlContainer\n  ) {\n    super(validators, asyncValidators, controlContainer);\n    increment++;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.inputId += this.idPostFix;\n  }\n}\n","module.exports = \"<div>\\n  <label [for]=\\\"inputId\\\" class=\\\"sr-only\\\" *ngIf=\\\"useScreenReaderLabel\\\">\\n    {{ screenReaderLabel || placeholder }}\\n  </label>\\n  <textarea\\n    class=\\\"form-control\\\"\\n    #inputRef\\n    [name]=\\\"name\\\"\\n    [id]=\\\"inputId\\\"\\n    [formControl]=\\\"control\\\"\\n    [rows]=\\\"rows\\\"\\n    [ngClass]=\\\"{ 'no-resize': !resizable }\\\"\\n    [ngStyle]=\\\"styleHeight\\\"\\n    [placeholder]=\\\"placeholder\\\"\\n    [attr.maxlength]=\\\"maxlength > 0 ? maxlength : null\\\"\\n    (focusin)=\\\"height = expandHeight\\\"\\n    (focusout)=\\\"height = collapseHeight\\\"\\n  ></textarea>\\n  <div\\n    *ngIf=\\\"labelRemaining\\\"\\n    class=\\\"form-text mt-0 pt-0 pb-0 text-right\\\"\\n    [ngClass]=\\\"{ 'text-disabled': disabled, 'text-neutral-dark': !disabled }\\\"\\n  >\\n    {{ labelRemaining }}\\n  </div>\\n</div>\\n\"","import { AfterViewInit, ChangeDetectorRef, Component, Host, Inject, Input, Optional } from '@angular/core';\nimport { CustomInputComponentAbstract, MakeProviders } from './custom-input-component.abstract';\nimport { ControlContainer, NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '@angular/forms';\n\n@Component({\n  selector: 'ui-core-textarea',\n  templateUrl: './textarea.component.html',\n  providers: MakeProviders(TextareaComponent)\n})\nexport class TextareaComponent extends CustomInputComponentAbstract implements AfterViewInit {\n  @Input() placeholder = '';\n  @Input() rows = 1;\n  @Input() maxlength: number;\n  @Input() labelCharsLeft: string;\n  @Input() resizable = false;\n  @Input() expandOnFocus = false;\n  @Input() screenReaderLabel: string;\n  @Input() useScreenReaderLabel = false;\n\n  labelRemaining: string;\n  height: number;\n  collapseHeight: number;\n  expandHeight: number;\n\n  get styleHeight() {\n    return this.height\n      ? {\n          height: `${this.height}px`\n        }\n      : {};\n  }\n\n  constructor(\n    @Optional() @Inject(NG_VALIDATORS) validators: Array<any>,\n    @Optional() @Inject(NG_ASYNC_VALIDATORS) asyncValidators: Array<any>,\n    @Optional() @Host() controlContainer: ControlContainer,\n    private readonly cdr: ChangeDetectorRef\n  ) {\n    super(validators, asyncValidators, controlContainer);\n  }\n\n  ngAfterViewInit() {\n    this.calculateExpandHeight();\n\n    if (this.labelCharsLeft && this.maxlength > 0) {\n      this.formControl.valueChanges.subscribe(value => {\n        this.calculateCharsLeft(value);\n      });\n\n      this.calculateCharsLeft(this.value);\n      this.cdr.detectChanges();\n    }\n  }\n\n  /**\n   * calculate expanded textarea height based on row count applied\n   */\n  calculateExpandHeight() {\n    if (this.expandOnFocus) {\n      const el = this.inputElementRef.nativeElement;\n      el.rows = 1;\n      const elHeight = el.offsetHeight;\n      el.rows = this.rows;\n\n      this.expandHeight = el.offsetHeight;\n      this.collapseHeight = this.height = elHeight;\n    }\n  }\n\n  /**\n   * caclulates how many chars left if textarea has a maxlength restriction\n   */\n  calculateCharsLeft(value: string) {\n    const actLength = value ? value.length : 0,\n      remaining = this.maxlength - actLength;\n    this.labelRemaining = this.labelCharsLeft.replace('{0}', remaining.toString());\n  }\n}\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\n\nexport class CustomValidators {\n  // replacement for already existing requiredTrue validator, as this one has a specific error key requiredTrue\n  static requiredTrue(control: AbstractControl): { [key: string]: any } {\n    const error: ValidationErrors = { requiredTrue: true };\n    if (!control.value) {\n      return error;\n    } else {\n      return null;\n    }\n  }\n}\n","export * from './custom-validators';\nexport * from './required-true.directive';\nexport * from './validate-messsage.service';\n","import { Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { CustomValidators } from './custom-validators';\n\n@Directive({\n  selector: '[uiCoreRequiredTrue][formControl],[uiCoreRequiredTrue][ngModel]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: forwardRef(() => RequiredTrueDirective), multi: true }]\n})\nexport class RequiredTrueDirective implements Validator {\n  validate(control: AbstractControl): { [key: string]: any } {\n    return CustomValidators.requiredTrue(control);\n  }\n}\n","import { Injectable } from '@angular/core';\n\ninterface ValidationResult {\n  [validator: string]: string | boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateMesssageService {\n  getMessage(validator: ValidationResult, key: string): string {\n    switch (key) {\n      case 'required':\n        return 'Please enter a value';\n      case 'requiredTrue':\n        return 'Please set required selection';\n      case 'pattern':\n        return 'Value does not match required pattern';\n      case 'minlength':\n        return `Value must be a minimum of ${(validator as any).minlength.requiredLength} characters`;\n      case 'maxlength':\n        return `Value must be a maximum of ${(validator as any).maxlength.requiredLength} characters`;\n    }\n\n    if (typeof validator[key] === 'string') {\n      return validator[key] as string;\n    } else {\n      return `Validation failed: ${key}`;\n    }\n  }\n}\n","module.exports = \"<div class=\\\"input-group\\\">\\n  <ui-core-input-field\\n    #inputField\\n    class=\\\"ui-core-search-field-input\\\"\\n    [name]=\\\"name\\\"\\n    [inputId]=\\\"inputId\\\"\\n    [placeholder]=\\\"placeholder\\\"\\n    [disabled]=\\\"disabled\\\"\\n  ></ui-core-input-field>\\n  <div class=\\\"input-group-append\\\">\\n    <button type=\\\"submit\\\" class=\\\"ui-core-search-field-btn\\\" [title]=\\\"buttonTitle\\\">\\n      <ui-core-svg-icon icon=\\\"search\\\" width=\\\"18\\\"></ui-core-svg-icon>\\n    </button>\\n  </div>\\n</div>\\n\"","module.exports = \"/*\\n * functions definition\\n */\\n/***\\n * original import\\n */\\n/***\\n * Patch / extend\\n */\\n/*\\n * scss helper functions\\n * TODO: finish or review implementation / remove if not needed\\n */\\n/**\\n * returns a font value from the definition\\n */\\n/**\\n * returns a color value from the definition\\n */\\n/**\\n * returns a spacing value from the definition\\n */\\n/**\\n * Remove the unit of a value\\n */\\n/**\\n * tests value if integer\\n */\\n/**\\n * retrieve multiple of baseline\\n */\\n/**\\n * helper to return the calc function for baseline with border\\n */\\n/**\\n * convert rem values to px based on default font size of 16px\\n */\\n/*\\n * hdms variable definitions\\n */\\n/********************\\n * Fonts definitions\\n * Design spec: Definitions see https://fork.invisionapp.com/d/main#/console/17301588/358610542/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/* Not used at the moment.\\n$baseline-hilti-extended: 0.185;\\n$baseline-hilti-heavy-extended: 0.185;\\n$baseline-arial: 0.153320;\\n$baseline-monospace: 0.162;\\n*/\\n/*\\n * Color definitions end\\n ********************/\\n/********************\\n * Color definitions\\n * Design spec: Definitions see https://fork.invisionapp.com/d/main/#/console/17301588/358610505/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/*\\n * Color definitions end\\n ********************/\\n/********************\\n * Grid system\\n * Design spec:\\n * Breakpoints: https://fork.invisionapp.com/d/main#/console/17301588/358610513/preview\\n * Mobile: https://fork.invisionapp.com/d/main#/console/17301588/358610515/preview\\n * Tablet: https://fork.invisionapp.com/d/main#/console/17301588/358610516/preview\\n * Desktop+: https://fork.invisionapp.com/d/main#/console/17301588/358610517/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/*\\n * Grid system end\\n ********************/\\n/********************\\n * Heights\\n */\\n/*\\n * Heights end\\n ********************/\\n/********************\\n * Sizing\\n */\\n/*\\n * Sizing end\\n ********************/\\n/********************\\n * Spacings\\n * Design spec:\\n * https://fork.invisionapp.com/d/main#/console/17301588/358610511/preview\\n * https://fork.invisionapp.com/d/main#/console/17301588/358610510/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/*\\n * Spacings end\\n ********************/\\n/********************\\n * Custom forms\\n */\\n/*\\n * Custom forms end\\n ********************/\\n/********************\\n * Layout helper classes\\n * Documentation: https://confluence.hilti.com/display/pshilti/Layout\\n */\\n/*\\n * Layout helper classes end\\n ********************/\\n/*\\n * global mixin definitions\\n * TODO: finish or review implementation / remove if not needed\\n */\\n/*\\n * variables definition\\n */\\n/***\\n * original import\\n */\\n/***\\n * Patch / extend\\n */\\n/*\\n * mixins definition\\n */\\n/***\\n * original import\\n */\\n/***\\n * Patch / extend\\n */\\n/**\\n * HILTI specific modifications:\\n * $border property: if plumber applied on elements with borders, these need to be subtracted from padding\\n */\\n/*\\n * Plumber baseline definition file\\n */\\n:host {\\n  position: relative;\\n  display: block; }\\n:host .ui-core-search-field-btn {\\n    padding: 0 10px;\\n    padding: 0 0.625rem;\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n    background: transparent;\\n    border: 0;\\n    outline: none;\\n    color: #524f53; }\\n:host .ui-core-input-field.is-disabled + .input-group-append .ui-core-search-field-btn {\\n    color: #bab9ba;\\n    cursor: default; }\\n:host.header-variant .ui-core-search-field-btn {\\n    color: #d2051e; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit, Input, HostBinding, ViewChild } from '@angular/core';\nimport { InputFieldComponent } from '../form/input-field.component';\n\n@Component({\n  selector: 'ui-core-search-field',\n  templateUrl: './search-field.component.html',\n  styleUrls: ['./search-field.component.scss']\n})\nexport class SearchFieldComponent implements OnInit {\n  @Input() class = '';\n  @Input() name: string;\n  @Input() inputId: string;\n  @Input() placeholder = '';\n  @Input() disabled = false;\n  @Input() headerVariant = false;\n  @Input() buttonTitle = 'Click to search';\n  @HostBinding('class') classList = 'ui-core-search-field';\n  @ViewChild('inputField') inpField: InputFieldComponent;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (this.class) {\n      this.classList += ` ${this.class}`;\n    }\n\n    if (this.headerVariant) {\n      this.classList += ' header-variant';\n    }\n\n    this.inpField.registerOnDisabledChange(isDisabled => {\n      this.inpField.isDisabled = isDisabled;\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormModule } from '../form/form.module';\nimport { SvgIconModule } from '../svg-icon/svg-icon.module';\nimport { SearchFieldComponent } from './search-field.component';\n\n@NgModule({\n  declarations: [SearchFieldComponent],\n  imports: [CommonModule, FormModule, SvgIconModule],\n  exports: [SearchFieldComponent]\n})\nexport class SearchFieldModule {}\n","module.exports = \"<svg\\n  [ngClass]=\\\"['svg-icon', 'svg-icon-' + icon, classes]\\\"\\n  [attr.width]=\\\"width\\\"\\n  [attr.height]=\\\"height || width\\\"\\n  [attr.aria-label]=\\\"title\\\"\\n  [attr.aria-hidden]=\\\"!title\\\"\\n  focusable=\\\"false\\\"\\n  role=\\\"img\\\"\\n>\\n  <use [attr.xlink:href]=\\\"'assets/sprites/symbol/svg/sprite.symbol.svg#' + icon\\\"></use>\\n</svg>\\n\"","module.exports = \"/*\\n * functions definition\\n */\\n/***\\n * original import\\n */\\n/***\\n * Patch / extend\\n */\\n/*\\n * scss helper functions\\n * TODO: finish or review implementation / remove if not needed\\n */\\n/**\\n * returns a font value from the definition\\n */\\n/**\\n * returns a color value from the definition\\n */\\n/**\\n * returns a spacing value from the definition\\n */\\n/**\\n * Remove the unit of a value\\n */\\n/**\\n * tests value if integer\\n */\\n/**\\n * retrieve multiple of baseline\\n */\\n/**\\n * helper to return the calc function for baseline with border\\n */\\n/**\\n * convert rem values to px based on default font size of 16px\\n */\\n/*\\n * hdms variable definitions\\n */\\n/********************\\n * Fonts definitions\\n * Design spec: Definitions see https://fork.invisionapp.com/d/main#/console/17301588/358610542/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/* Not used at the moment.\\n$baseline-hilti-extended: 0.185;\\n$baseline-hilti-heavy-extended: 0.185;\\n$baseline-arial: 0.153320;\\n$baseline-monospace: 0.162;\\n*/\\n/*\\n * Color definitions end\\n ********************/\\n/********************\\n * Color definitions\\n * Design spec: Definitions see https://fork.invisionapp.com/d/main/#/console/17301588/358610505/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/*\\n * Color definitions end\\n ********************/\\n/********************\\n * Grid system\\n * Design spec:\\n * Breakpoints: https://fork.invisionapp.com/d/main#/console/17301588/358610513/preview\\n * Mobile: https://fork.invisionapp.com/d/main#/console/17301588/358610515/preview\\n * Tablet: https://fork.invisionapp.com/d/main#/console/17301588/358610516/preview\\n * Desktop+: https://fork.invisionapp.com/d/main#/console/17301588/358610517/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/*\\n * Grid system end\\n ********************/\\n/********************\\n * Heights\\n */\\n/*\\n * Heights end\\n ********************/\\n/********************\\n * Sizing\\n */\\n/*\\n * Sizing end\\n ********************/\\n/********************\\n * Spacings\\n * Design spec:\\n * https://fork.invisionapp.com/d/main#/console/17301588/358610511/preview\\n * https://fork.invisionapp.com/d/main#/console/17301588/358610510/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/*\\n * Spacings end\\n ********************/\\n/********************\\n * Custom forms\\n */\\n/*\\n * Custom forms end\\n ********************/\\n/********************\\n * Layout helper classes\\n * Documentation: https://confluence.hilti.com/display/pshilti/Layout\\n */\\n/*\\n * Layout helper classes end\\n ********************/\\n/*\\n * global mixin definitions\\n * TODO: finish or review implementation / remove if not needed\\n */\\n/*\\n * variables definition\\n */\\n/***\\n * original import\\n */\\n/***\\n * Patch / extend\\n */\\n/*\\n * mixins definition\\n */\\n/***\\n * original import\\n */\\n/***\\n * Patch / extend\\n */\\n/**\\n * HILTI specific modifications:\\n * $border property: if plumber applied on elements with borders, these need to be subtracted from padding\\n */\\n/*\\n * Plumber baseline definition file\\n */\\n:host {\\n  display: inline-block;\\n  line-height: 0;\\n  color: inherit;\\n  fill: currentColor; }\\n:host .svg-icon {\\n    display: inline-block;\\n    line-height: inherit;\\n    color: inherit;\\n    fill: inherit; }\\n:host-context(.ui-core-text) .svg-icon {\\n  flex-shrink: 0; }\\n:host-context(.ui-core-text):first-child {\\n  margin-right: 5px;\\n  margin-right: 0.3125rem; }\\n:host-context(.ui-core-text):nth-child(n + 2) {\\n  margin-left: 5px;\\n  margin-left: 0.3125rem; }\\n:host-context(.btn):first-child {\\n  margin-right: 10px;\\n  margin-right: 0.625rem; }\\n:host-context(.btn):last-child {\\n  margin-left: 10px;\\n  margin-left: 0.625rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'ui-core-svg-icon',\n  templateUrl: './svg-icon.component.html',\n  styleUrls: ['./svg-icon.component.scss']\n})\nexport class SvgIconComponent implements OnInit {\n  @Input() icon: string;\n  @Input() classes = '';\n  @Input() width = '16px';\n  @Input() height: string;\n  @Input() title: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SvgIconComponent } from './svg-icon.component';\n\n@NgModule({\n  declarations: [SvgIconComponent],\n  imports: [CommonModule],\n  exports: [SvgIconComponent]\n})\nexport class SvgIconModule {}\n","module.exports = \"<ng-content select=\\\"[icon-before]\\\"></ng-content>\\n<span [ngClass]=\\\"['ui-core-text-content']\\\">\\n  <ng-content select=\\\"[content]\\\"></ng-content>\\n</span>\\n<ng-content select=\\\"[icon-after-1]\\\"></ng-content>\\n<ng-content select=\\\"[icon-after-2]\\\"></ng-content>\\n<ng-content select=\\\"[icon-after-3]\\\"></ng-content>\\n\"","module.exports = \"/*\\n * functions definition\\n */\\n/***\\n * original import\\n */\\n/***\\n * Patch / extend\\n */\\n/*\\n * scss helper functions\\n * TODO: finish or review implementation / remove if not needed\\n */\\n/**\\n * returns a font value from the definition\\n */\\n/**\\n * returns a color value from the definition\\n */\\n/**\\n * returns a spacing value from the definition\\n */\\n/**\\n * Remove the unit of a value\\n */\\n/**\\n * tests value if integer\\n */\\n/**\\n * retrieve multiple of baseline\\n */\\n/**\\n * helper to return the calc function for baseline with border\\n */\\n/**\\n * convert rem values to px based on default font size of 16px\\n */\\n/*\\n * hdms variable definitions\\n */\\n/********************\\n * Fonts definitions\\n * Design spec: Definitions see https://fork.invisionapp.com/d/main#/console/17301588/358610542/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/* Not used at the moment.\\n$baseline-hilti-extended: 0.185;\\n$baseline-hilti-heavy-extended: 0.185;\\n$baseline-arial: 0.153320;\\n$baseline-monospace: 0.162;\\n*/\\n/*\\n * Color definitions end\\n ********************/\\n/********************\\n * Color definitions\\n * Design spec: Definitions see https://fork.invisionapp.com/d/main/#/console/17301588/358610505/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/*\\n * Color definitions end\\n ********************/\\n/********************\\n * Grid system\\n * Design spec:\\n * Breakpoints: https://fork.invisionapp.com/d/main#/console/17301588/358610513/preview\\n * Mobile: https://fork.invisionapp.com/d/main#/console/17301588/358610515/preview\\n * Tablet: https://fork.invisionapp.com/d/main#/console/17301588/358610516/preview\\n * Desktop+: https://fork.invisionapp.com/d/main#/console/17301588/358610517/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/*\\n * Grid system end\\n ********************/\\n/********************\\n * Heights\\n */\\n/*\\n * Heights end\\n ********************/\\n/********************\\n * Sizing\\n */\\n/*\\n * Sizing end\\n ********************/\\n/********************\\n * Spacings\\n * Design spec:\\n * https://fork.invisionapp.com/d/main#/console/17301588/358610511/preview\\n * https://fork.invisionapp.com/d/main#/console/17301588/358610510/preview\\n * Documentation: https://confluence.hilti.com/display/pshilti/UI+library+documentation\\n */\\n/*\\n * Spacings end\\n ********************/\\n/********************\\n * Custom forms\\n */\\n/*\\n * Custom forms end\\n ********************/\\n/********************\\n * Layout helper classes\\n * Documentation: https://confluence.hilti.com/display/pshilti/Layout\\n */\\n/*\\n * Layout helper classes end\\n ********************/\\n/*\\n * global mixin definitions\\n * TODO: finish or review implementation / remove if not needed\\n */\\n/*\\n * variables definition\\n */\\n/***\\n * original import\\n */\\n/***\\n * Patch / extend\\n */\\n/*\\n * mixins definition\\n */\\n/***\\n * original import\\n */\\n/***\\n * Patch / extend\\n */\\n/**\\n * HILTI specific modifications:\\n * $border property: if plumber applied on elements with borders, these need to be subtracted from padding\\n */\\n/*\\n * Plumber baseline definition file\\n */\\n:host {\\n  font-size: 15px;\\n  font-size: 0.9375rem;\\n  line-height: 22px;\\n  line-height: 1.375rem;\\n  margin-top: -11px;\\n  margin-top: -0.6875rem;\\n  padding-top: 6px;\\n  padding-top: 0.375rem;\\n  padding-bottom: 5px;\\n  padding-bottom: 0.3125rem;\\n  margin-bottom: 0px;\\n  margin-bottom: 0; }\\n.has-bg:host {\\n  font-size: 15px;\\n  font-size: 0.9375rem;\\n  line-height: 22px;\\n  line-height: 1.375rem;\\n  margin-top: 0px;\\n  margin-top: 0;\\n  padding-top: 6px;\\n  padding-top: 0.375rem;\\n  padding-bottom: 5px;\\n  padding-bottom: 0.3125rem;\\n  margin-bottom: 22px;\\n  margin-bottom: 1.375rem; }\\n:host {\\n  width: 100%;\\n  display: flex;\\n  align-items: center;\\n  flex-direction: row;\\n  justify-content: space-between; }\\n:host.has-bg {\\n    padding-left: 10px;\\n    padding-left: 0.625rem;\\n    padding-right: 10px;\\n    padding-right: 0.625rem;\\n    color: #fff; }\\n.ui-core-text-content {\\n  display: block;\\n  width: 100%;\\n  height: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit, Input, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'ui-core-text',\n  templateUrl: './text.component.html',\n  styleUrls: ['./text.component.scss']\n})\nexport class TextComponent implements OnInit {\n  @Input() class = '';\n  @Input() bgColor = '';\n  @HostBinding('class') classList = 'ui-core-text';\n\n  constructor() {}\n\n  ngOnInit() {\n    if (this.class) {\n      this.classList += ` ${this.class}`;\n    }\n    if (this.bgColor) {\n      this.classList += ` ${this.bgColor} has-bg`;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextComponent } from './text.component';\n\n@NgModule({\n  declarations: [TextComponent],\n  imports: [CommonModule],\n  exports: [TextComponent]\n})\nexport class TextModule {}\n","// window-ref\nexport * from './lib/window-ref/window-ref.service';\n\n// currency-format\nexport * from './lib/currency-format/currency-format.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CurrencyFormatPipe } from './currency-format.pipe';\n\n@NgModule({\n  declarations: [CurrencyFormatPipe],\n  imports: [CommonModule],\n  exports: [CurrencyFormatPipe]\n})\nexport class CurrencyFormatModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'currencyFormat'\n})\nexport class CurrencyFormatPipe implements PipeTransform {\n  /**\n   * used for global pattern assignment\n   */\n  static Pattern: string;\n\n  readonly patternRegex: RegExp = /^([^#]*)(#+[^#]?#*[^#]?#+)([^#]*)$/;\n\n  private static getIntValue(value: any, decimalPlaces: number): number {\n    return parseInt(decimalPlaces ? value : Math.round(value), 10);\n  }\n\n  private static getDecimalPattern(separator: string, pattern: string): string {\n    return separator ? pattern.substr(pattern.lastIndexOf(separator) + 1) : '';\n  }\n\n  private static getThousandSeparatorPos(value: string): number {\n    return value.length > 3 ? value.length % 3 : 0;\n  }\n\n  private static getRoundedValue(value: number, factor: number): number {\n    return Math.round(Math.abs(value) * factor) / factor;\n  }\n\n  private static getThousandPart(value: string, separator: string, separatorPos: number): string {\n    return separatorPos ? value.substr(0, separatorPos) + separator : '';\n  }\n\n  private static getHundredPart(value: string, separator: string, separatorPos: number): string {\n    return value.substr(separatorPos).replace(/(\\d{3})(?=\\d)/g, `$1${separator}`);\n  }\n\n  private static getDecimalPart(value: number, amount: number, separator: string): string {\n    return amount ? separator + value.toFixed(amount).slice(2) : '';\n  }\n\n  /**\n   * Transforms a numeric value to a given currency format\n   * @param {any} value - string or number\n   * @param {string} customPattern - optionally/individually applied\n   */\n  transform(value: any, customPattern?: string): string {\n    const pattern: string = customPattern || CurrencyFormatPipe.Pattern;\n\n    // return the input in case of invalid pattern or value\n    if (!pattern || !pattern.match(this.patternRegex) || !value || isNaN(value)) {\n      return value;\n    }\n\n    return pattern.replace(this.patternRegex, (all, preFix, numeralPattern, postFix) => {\n      const separators: Array<string> = numeralPattern.match(/[^#]+/g) || [],\n        thousandSeparator: string = separators[0] || '',\n        decimalSeparator: string = separators.length > 1 ? separators[1] : '',\n        decimalPattern: string = CurrencyFormatPipe.getDecimalPattern(decimalSeparator, numeralPattern),\n        decimalPlaces: number = decimalPattern ? decimalPattern.length : 0,\n        valueInt: number = CurrencyFormatPipe.getIntValue(value, decimalPlaces),\n        valueAbs: number = Math.abs(valueInt),\n        valueAbsString: string = valueAbs.toString(),\n        thousandSeparatorPos: number = CurrencyFormatPipe.getThousandSeparatorPos(valueAbsString),\n        roundedValue: number = CurrencyFormatPipe.getRoundedValue(value, Math.pow(10, decimalPlaces)),\n        negativeSign: string = valueInt < 0 ? '-' : '',\n        thousandPart: string = CurrencyFormatPipe.getThousandPart(\n          valueAbsString,\n          thousandSeparator,\n          thousandSeparatorPos\n        ),\n        hundredPart: string = CurrencyFormatPipe.getHundredPart(\n          valueAbsString,\n          thousandSeparator,\n          thousandSeparatorPos\n        ),\n        decimalPart: string = CurrencyFormatPipe.getDecimalPart(\n          roundedValue - valueAbs,\n          decimalPlaces,\n          decimalSeparator\n        );\n\n      return preFix + negativeSign + thousandPart + hundredPart + decimalPart + postFix;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nfunction _window(): any {\n  // return the global native browser window object\n  return window;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowRefService {\n  constructor() {}\n\n  get nativeWindow(): any {\n    return _window();\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { GraphqlExampleComponent } from './graphql-example/pages/graphql-example/graphql-example.component';\nimport { HomeComponent } from './home/pages/home/home.component';\nimport { MockExampleComponent } from './mock-example/mock-example.component';\nimport { WindowRefComponent } from './window-ref/window-ref.component';\nimport { PipesShowcaseComponent } from './pipes-showcase/pipes-showcase.component';\nimport { TranslationComponent } from './translation/translation.component';\nimport { FormsExampleComponent } from './forms/forms-example.component';\nimport { BootstrapGridUsecasesComponent } from './bootstrap-grid-usecases/bootstrap-grid-usecases.component';\nimport { CssGridUsecasesComponent } from './css-grid-usecases/css-grid-usecases.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'graphql-example', component: GraphqlExampleComponent },\n  { path: 'mock-example', component: MockExampleComponent },\n  { path: 'window-ref', component: WindowRefComponent },\n  { path: 'pipes-showcase', component: PipesShowcaseComponent },\n  { path: 'translation', component: TranslationComponent },\n  { path: 'forms-example', component: FormsExampleComponent },\n  { path: 'bootstrap-grid-usecases', component: BootstrapGridUsecasesComponent },\n  { path: 'css-grid-usecases', component: CssGridUsecasesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  declarations: [],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<nav>\\n  <h3>Examples</h3>\\n  <p></p>\\n  <p><a routerLink=\\\"/graphql-example\\\">GraphQL</a></p>\\n  <p><a routerLink=\\\"/mock-example\\\">Data Mock Structure</a></p>\\n  <p><a routerLink=\\\"/window-ref\\\">Window Ref Service</a></p>\\n  <p><a routerLink=\\\"/pipes-showcase\\\">Pipes Showcase</a></p>\\n  <p><a routerLink=\\\"/translation\\\">Translation</a></p>\\n  <p><a routerLink=\\\"/forms-example\\\">Forms Example</a></p>\\n  <p><a routerLink=\\\"/bootstrap-grid-usecases\\\">Bootstrap 48-col grid use cases</a></p>\\n  <p><a routerLink=\\\"/css-grid-usecases\\\">CSS Grid use cases</a></p>\\n</nav>\\n<div class=\\\"main-view\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \":host {\\n  width: 100%;\\n  display: flex;\\n  flex-flow: row; }\\n  :host nav {\\n    width: 200px;\\n    width: 12.5rem;\\n    padding: 10px;\\n    padding: 0.625rem;\\n    border-right: 2px dashed lightgray;\\n    border-right: 0.125rem dashed lightgray;\\n    min-height: 100vh; }\\n  :host > .main-view {\\n    width: calc(100% - 200px);\\n    width: calc(100% - 12.5rem);\\n    padding: 10px;\\n    padding: 0.625rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tZWwvaG9sbmcvZGV2L2xheW91dC9oZG1zL2FwcHMvZXhhbXBsZXMvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFHRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLGNBQWMsRUFBQTtFQUxoQjtJQVFJLFlBUG1CO0lBT25CLGNBUG1CO0lBUW5CLGFBQWE7SUFBYixpQkFBYTtJQUNiLGtDQUFrQztJQUFsQyx1Q0FBa0M7SUFDbEMsaUJBQWlCLEVBQUE7RUFYckI7SUFlSSx5QkFBcUM7SUFBckMsMkJBQXFDO0lBQ3JDLGFBQWE7SUFBYixpQkFBYSxFQUFBIiwiZmlsZSI6ImFwcHMvZXhhbXBsZXMvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICRuYXYtYmFyLXdpZHRoOiAyMDBweDtcblxuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3c7XG5cbiAgbmF2IHtcbiAgICB3aWR0aDogJG5hdi1iYXItd2lkdGg7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXItcmlnaHQ6IDJweCBkYXNoZWQgbGlnaHRncmF5O1xuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICB9XG5cbiAgPiAubWFpbi12aWV3IHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gI3skbmF2LWJhci13aWR0aH0pO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gIH1cbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'hdms-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'examples';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n/* Components */\nimport { AppComponent } from './app.component';\nimport { HomeModule } from './home/home.module';\nimport { MockExampleModule } from './mock-example/mock-example.module';\nimport { GraphqlExampleModule } from './graphql-example/graphql-example.module';\nimport { WindowRefModule } from './window-ref/window-ref.module';\nimport { PipeShowcaseModule } from './pipes-showcase/pipes-showcase.module';\nimport { TranslationModule } from './translation/translation.module';\nimport { FormsExampleModule } from './forms/forms-example.module';\n\n/* Routing */\nimport { AppRoutingModule } from './app-routing.module';\nimport { BootstrapGridUsecasesModule } from './bootstrap-grid-usecases/bootstrap-grid-usecases.module';\nimport { CssGridUsecasesModule } from './css-grid-usecases/css-grid-usecases.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    HomeModule,\n    GraphqlExampleModule,\n    MockExampleModule,\n    AppRoutingModule,\n    WindowRefModule,\n    PipeShowcaseModule,\n    TranslationModule,\n    FormsExampleModule,\n    BootstrapGridUsecasesModule,\n    CssGridUsecasesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"<!-- 48-col GRID POC (BOOTSTRAP) -->\\n\\n<!-- header -->\\n<div class=\\\"container-fluid bg-white border-bottom border-neutral-light\\\">\\n  <!-- first row -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-48\\\">\\n      <div class=\\\"box-group flex-nowrap\\\">\\n        <div class=\\\"box box-w-content mt-1 pr-1\\\">\\n          <div class=\\\"img\\\">\\n            <picture>\\n              <img src=\\\"assets/images/logo_2016_sRGB.svg\\\" height=\\\"33\\\" alt=\\\"HILTI logo\\\" />\\n            </picture>\\n          </div>\\n        </div>\\n        <div class=\\\"box px-0 mt-1\\\">\\n          <ui-core-search-field\\n            class=\\\"w-75 w-xl-50\\\"\\n            headerVariant=\\\"true\\\"\\n            name=\\\"search_field\\\"\\n            inputId=\\\"search_field\\\"\\n            placeholder=\\\"\\\"\\n            buttonTitle=\\\"Search field button\\\"\\n          ></ui-core-search-field>\\n        </div>\\n\\n        <div class=\\\"box box-w-content d-flex align-items-center justify-content-end pl-0\\\">\\n          <!-- TODO: WIP - workaround, refactoring of tertiary button needed -->\\n          <div class=\\\"text-neutral-dark\\\">EN</div>\\n          <ui-core-button variant=\\\"tertiary\\\" buttonClasses=\\\"px-0 my-0 ml-2\\\">\\n            <ui-core-svg-icon iconBefore icon=\\\"clock\\\" width=\\\"18\\\" title=\\\"ARIA friendly title\\\"></ui-core-svg-icon>\\n          </ui-core-button>\\n\\n          <!-- TODO: WIP - workaround, refactoring of tertiary button needed -->\\n          <div class=\\\"text-neutral-dark ml-4\\\">Cart</div>\\n          <ui-core-button variant=\\\"tertiary\\\" buttonClasses=\\\"px-0 my-0 ml-2\\\">\\n            <ui-core-svg-icon iconBefore icon=\\\"clock\\\" width=\\\"18\\\" title=\\\"ARIA friendly title\\\"></ui-core-svg-icon>\\n          </ui-core-button>\\n\\n          <!-- TODO: WIP - workaround, refactoring of tertiary button needed -->\\n          <div class=\\\"ml-4\\\">\\n            <p class=\\\"text-neutral-dark my-0 py-0\\\">\\n              MS UK DEMO TEST\\n              <br />\\n              123234235345\\n            </p>\\n          </div>\\n          <ui-core-button variant=\\\"tertiary\\\" buttonClasses=\\\"px-0 my-0 ml-2\\\">\\n            <ui-core-svg-icon iconBefore icon=\\\"clock\\\" width=\\\"18\\\" title=\\\"ARIA friendly title\\\"></ui-core-svg-icon>\\n          </ui-core-button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- second row -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-48\\\">\\n      <div class=\\\"box-group flex-nowrap\\\">\\n        <div class=\\\"box box-w-content d-flex justify-content-start pr-0\\\">\\n          <ui-core-button variant=\\\"tertiary\\\" buttonClasses=\\\"text-primary border-primary px-0 mb-1 mr-1\\\">\\n            <ui-core-svg-icon iconBefore icon=\\\"clock\\\" width=\\\"18\\\" title=\\\"ARIA friendly title\\\"></ui-core-svg-icon>\\n          </ui-core-button>\\n          <ui-core-button variant=\\\"dropdown\\\" buttonClasses=\\\"text-primary px-0 mb-1\\\">\\n            <span label>Product Shop</span>\\n            <ui-core-svg-icon iconAfter icon=\\\"arrow_down\\\" width=\\\"18\\\"></ui-core-svg-icon>\\n          </ui-core-button>\\n        </div>\\n\\n        <div class=\\\"box pl-0 d-flex justify-content-end\\\">\\n          <ui-core-button variant=\\\"dropdown\\\" buttonClasses=\\\"pr-0 mb-1\\\">\\n            <span label>ENGINEERING</span>\\n            <ui-core-svg-icon iconAfter icon=\\\"arrow_down\\\" width=\\\"18\\\"></ui-core-svg-icon>\\n          </ui-core-button>\\n          <ui-core-button variant=\\\"dropdown\\\" buttonClasses=\\\"pr-0 mb-1\\\">\\n            <span label>SERVICES</span>\\n            <ui-core-svg-icon iconAfter icon=\\\"arrow_down\\\" width=\\\"18\\\"></ui-core-svg-icon>\\n          </ui-core-button>\\n          <ui-core-button variant=\\\"dropdown\\\" buttonClasses=\\\"pr-0 mb-1\\\">\\n            <span label>TOOL MAINTENANCE</span>\\n            <ui-core-svg-icon iconAfter icon=\\\"arrow_down\\\" width=\\\"18\\\"></ui-core-svg-icon>\\n          </ui-core-button>\\n          <ui-core-button variant=\\\"dropdown\\\" buttonClasses=\\\"pr-0 mb-1\\\">\\n            <span label>ORDERS</span>\\n            <ui-core-svg-icon iconAfter icon=\\\"arrow_down\\\" width=\\\"18\\\"></ui-core-svg-icon>\\n          </ui-core-button>\\n          <ui-core-button variant=\\\"dropdown\\\" buttonClasses=\\\"pr-0 mb-1\\\">\\n            <span label>FAVORITES</span>\\n            <ui-core-svg-icon iconAfter icon=\\\"arrow_down\\\" width=\\\"18\\\"></ui-core-svg-icon>\\n          </ui-core-button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- product grid -->\\n<div class=\\\"container-fluid bg-light-10 py-1\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"box-group\\\">\\n        <div class=\\\"box d-flex\\\">\\n          <div class=\\\"nav w-100 flex-column nav-pills bg-steel-10 py-1\\\">\\n            <h2 class=\\\"heading-md text-uppercase text-red px-3\\\">Please select</h2>\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Power tools</a>\\n            <a class=\\\"nav-link active\\\" href=\\\"#\\\">Cordless tools</a>\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Measuring Tools and Scanners</a>\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Tool inserts</a>\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Direct Fastening</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-36\\\">\\n      <div class=\\\"box-group pt-1\\\">\\n        <div class=\\\"box w-100 px-0\\\">\\n          <h2 class=\\\"heading-md text-uppercase text-red\\\">Cordless Tools</h2>\\n        </div>\\n        <div\\n          class=\\\"box box-w-1-3 border shadow-sm rounded-sm mb-1 border-neutral-light d-flex flex-nowrap align-items-center\\\"\\n        >\\n          <div class=\\\"img w-25 mr-2\\\">\\n            <picture>\\n              <img class=\\\"d-block w-100\\\" src=\\\"assets/images/tool.jpg\\\" alt=\\\"tool\\\" />\\n            </picture>\\n          </div>\\n          <p class=\\\"my-0\\\">Hammers</p>\\n        </div>\\n        <div\\n          class=\\\"box box-w-1-3 border shadow-sm rounded-sm mb-1 border-neutral-light d-flex flex-nowrap align-items-center\\\"\\n        >\\n          <div class=\\\"img w-25 mr-2\\\">\\n            <picture>\\n              <img class=\\\"d-block w-100\\\" src=\\\"assets/images/tool.jpg\\\" alt=\\\"tool\\\" />\\n            </picture>\\n          </div>\\n          <p class=\\\"my-0\\\">Demolition Hammers</p>\\n        </div>\\n        <div\\n          class=\\\"box box-w-1-3 border shadow-sm rounded-sm mb-1 border-neutral-light d-flex flex-nowrap align-items-center\\\"\\n        >\\n          <div class=\\\"img w-25 mr-2\\\">\\n            <picture>\\n              <img class=\\\"d-block w-100\\\" src=\\\"assets/images/tool.jpg\\\" alt=\\\"tool\\\" />\\n            </picture>\\n          </div>\\n          <p class=\\\"my-0\\\">Rotary Hammers</p>\\n        </div>\\n        <div\\n          class=\\\"box box-w-1-3 border shadow-sm rounded-sm mb-1 border-neutral-light d-flex flex-nowrap align-items-center\\\"\\n        >\\n          <div class=\\\"img w-25 mr-2\\\">\\n            <picture>\\n              <img class=\\\"d-block w-100\\\" src=\\\"assets/images/tool.jpg\\\" alt=\\\"tool\\\" />\\n            </picture>\\n          </div>\\n          <p class=\\\"my-0\\\">Drivers and Screwdrivers</p>\\n        </div>\\n        <div\\n          class=\\\"box box-w-1-3 border shadow-sm rounded-sm mb-1 border-neutral-light d-flex flex-nowrap align-items-center\\\"\\n        >\\n          <div class=\\\"img w-25 mr-2\\\">\\n            <picture>\\n              <img class=\\\"d-block w-100\\\" src=\\\"assets/images/tool.jpg\\\" alt=\\\"tool\\\" />\\n            </picture>\\n          </div>\\n          <p class=\\\"my-0\\\">Drivers & Wrenches</p>\\n        </div>\\n        <div\\n          class=\\\"box box-w-1-3 border shadow-sm rounded-sm mb-1 border-neutral-light d-flex flex-nowrap align-items-center\\\"\\n        >\\n          <div class=\\\"img w-25 mr-2\\\">\\n            <picture>\\n              <img class=\\\"d-block w-100\\\" src=\\\"assets/images/tool.jpg\\\" alt=\\\"tool\\\" />\\n            </picture>\\n          </div>\\n          <p class=\\\"my-0\\\">Saws</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- box with shadow container -->\\n<div class=\\\"container-fluid bg-steel-10 py-1\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-8\\\">\\n      <div class=\\\"box-group\\\">\\n        <div class=\\\"box\\\">\\n          <h3 class=\\\"heading-sm text-primary\\\">Headline</h3>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-8\\\">\\n      <div class=\\\"box-group\\\">\\n        <div class=\\\"box\\\">\\n          <h3 class=\\\"heading-sm text-primary\\\">Headline</h3>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-24\\\">\\n      <div class=\\\"box-group flex-nowrap bg-light shadow rounded-sm  bl-h-10\\\">\\n        <div class=\\\"box\\\">\\n          <h3 class=\\\"heading-sm text-primary\\\">Headline</h3>\\n        </div>\\n        <div class=\\\"box\\\">\\n          <h3 class=\\\"heading-sm text-primary\\\">Headline</h3>\\n        </div>\\n        <div class=\\\"box\\\">\\n          <h3 class=\\\"heading-sm text-primary\\\">Headline</h3>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-8\\\">\\n      <div class=\\\"box-group\\\">\\n        <div class=\\\"box\\\">\\n          <h3 class=\\\"heading-sm text-primary\\\">Headline</h3>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ui-core-bootstrap-grid-usecases',\n  templateUrl: './bootstrap-grid-usecases.component.html',\n  styleUrls: []\n})\nexport class BootstrapGridUsecasesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SvgIconModule, FormModule, TextModule, SearchFieldModule, ButtonModule } from '@hdms/shared/ui-core';\n\nimport { BootstrapGridUsecasesComponent } from './bootstrap-grid-usecases.component';\n\n@NgModule({\n  declarations: [BootstrapGridUsecasesComponent],\n  imports: [NgbModule, SvgIconModule, FormModule, SearchFieldModule, TextModule, ButtonModule]\n})\nexport class BootstrapGridUsecasesModule {}\n","module.exports = \"<div class=\\\"container-fluid bg-light-10 py-1\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-36\\\">\\n      <div class=\\\"grid-group pt-1\\\">\\n        <div class=\\\"box border shadow-sm rounded-sm mb-1 border-neutral-light align-items-center product-tile\\\">\\n          <div class=\\\"image-box\\\">\\n            <picture>\\n              <img src=\\\"assets/images/tool.jpg\\\" alt=\\\"tool\\\" />\\n            </picture>\\n          </div>\\n          <div class=\\\"descrip\\\">\\n            <p class=\\\"text-bold\\\">\\n              Cordless rotary hammer\\n              <br />\\n              TE-4 A22 case\\n            </p>\\n          </div>\\n          <div class=\\\"quantity\\\">\\n            <ui-core-input-field\\n              name=\\\"quantity\\\"\\n              placeholder=\\\"1\\\"\\n              required\\n              maxlength=\\\"3\\\"\\n              pattern=\\\"\\\\d*\\\"\\n            ></ui-core-input-field>\\n          </div>\\n          <div class=\\\"price\\\">\\n            <p>\\n              <strong>$99.999.00</strong>\\n              <br />\\n              Monthly for 36 months\\n            </p>\\n          </div>\\n          <div class=\\\"button-box\\\">\\n            <ui-core-button variant=\\\"tertiary\\\" buttonClasses=\\\"text-primary border-primary px-0 mb-1 mr-1\\\">\\n              <ui-core-svg-icon iconBefore icon=\\\"clock\\\" width=\\\"18\\\" title=\\\"ARIA friendly title\\\"></ui-core-svg-icon>\\n            </ui-core-button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"/**\\n * CSS grid definitions\\n *\\n */\\n.grid-group {\\n  display: -ms-grid;\\n  display: grid; }\\n.grid-group .image-box {\\n    -ms-grid-row: 1;\\n    -ms-grid-row-span: 3;\\n    -ms-grid-column: 1;\\n    grid-area: image-box; }\\n.grid-group .image-box img {\\n      max-height: 100px;\\n      max-height: 6.25rem; }\\n.grid-group .descrip {\\n    -ms-grid-row: 1;\\n    -ms-grid-column: 3;\\n    -ms-grid-column-span: 3;\\n    grid-area: descrip; }\\n.grid-group .button-box {\\n    -ms-grid-row: 1;\\n    -ms-grid-row-span: 3;\\n    -ms-grid-column: 7;\\n    grid-area: button-box; }\\n.grid-group .quantity {\\n    -ms-grid-row: 3;\\n    -ms-grid-column: 3;\\n    grid-area: quantity; }\\n.grid-group .price {\\n    -ms-grid-row: 3;\\n    -ms-grid-column: 5;\\n    grid-area: price; }\\n.grid-group .product-tile {\\n    display: -ms-grid;\\n    display: grid;\\n    grid-gap: 15px;\\n    max-width: 50%;\\n    -ms-grid-columns: 2fr 15px 2fr 15px 4fr 15px 1fr;\\n    -ms-grid-rows: auto 15px auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tZWwvaG9sbmcvZGV2L2xheW91dC9oZG1zL2FwcHMvZXhhbXBsZXMvc3JjL2FwcC9jc3MtZ3JpZC11c2VjYXNlcy9jc3MtZ3JpZC1wcm9kdWN0LXRpbGUvY3NzLWdyaWQtcHJvZHVjdC10aWxlLmNvbXBvbmVudC5zY3NzIiwiYXBwcy9leGFtcGxlcy9zcmMvYXBwL2Nzcy1ncmlkLXVzZWNhc2VzL2Nzcy1ncmlkLXByb2R1Y3QtdGlsZS9jc3MtZ3JpZC1wcm9kdWN0LXRpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztFQ0dFO0FERUY7RUFDRSxpQkFBaUI7RUFDakIsYUFBYSxFQUFBO0FBRmY7SUFLSSxlQUFlO0lBQ2Ysb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQixvQkFBb0IsRUFBQTtBQVJ4QjtNQVdNLGlCQUFpQjtNQUFqQixtQkFBaUIsRUFBQTtBQVh2QjtJQWdCSSxlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2QixrQkFBa0IsRUFBQTtBQW5CdEI7SUF1QkksZUFBZTtJQUNmLG9CQUFvQjtJQUNwQixrQkFBa0I7SUFDbEIscUJBQXFCLEVBQUE7QUExQnpCO0lBOEJJLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsbUJBQW1CLEVBQUE7QUFoQ3ZCO0lBb0NJLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsZ0JBQWdCLEVBQUE7QUF0Q3BCO0lBMENJLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IsY0FBYztJQUNkLGNBQWM7SUFDZCxnREFBZ0Q7SUFFaEQsNkJBQTZCLEVBQUEiLCJmaWxlIjoiYXBwcy9leGFtcGxlcy9zcmMvYXBwL2Nzcy1ncmlkLXVzZWNhc2VzL2Nzcy1ncmlkLXByb2R1Y3QtdGlsZS9jc3MtZ3JpZC1wcm9kdWN0LXRpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENTUyBncmlkIGRlZmluaXRpb25zXG4gKlxuICovXG5cbi5ncmlkLWdyb3VwIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG5cbiAgLmltYWdlLWJveCB7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIC1tcy1ncmlkLXJvdy1zcGFuOiAzO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWFyZWE6IGltYWdlLWJveDtcblxuICAgIGltZyB7XG4gICAgICBtYXgtaGVpZ2h0OiAxMDBweDtcbiAgICB9XG4gIH1cblxuICAuZGVzY3JpcCB7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWFyZWE6IGRlc2NyaXA7XG4gIH1cblxuICAuYnV0dG9uLWJveCB7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIC1tcy1ncmlkLXJvdy1zcGFuOiAzO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNztcbiAgICBncmlkLWFyZWE6IGJ1dHRvbi1ib3g7XG4gIH1cblxuICAucXVhbnRpdHkge1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgZ3JpZC1hcmVhOiBxdWFudGl0eTtcbiAgfVxuXG4gIC5wcmljZSB7XG4gICAgLW1zLWdyaWQtcm93OiAzO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNTtcbiAgICBncmlkLWFyZWE6IHByaWNlO1xuICB9XG5cbiAgLnByb2R1Y3QtdGlsZSB7XG4gICAgZGlzcGxheTogLW1zLWdyaWQ7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLWdhcDogMTVweDtcbiAgICBtYXgtd2lkdGg6IDUwJTtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAyZnIgMTVweCAyZnIgMTVweCA0ZnIgMTVweCAxZnI7XG4gICAgLy9ncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJmciAyZnIgNGZyIDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiBhdXRvIDE1cHggYXV0bztcbiAgICAvL2dyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgLy8gICdpbWFnZS1ib3ggIGRlc2NyaXAgIGRlc2NyaXAgIGJ1dHRvbi1ib3gnXG4gICAgLy8gICdpbWFnZS1ib3ggIHF1YW50aXR5IHByaWNlICAgIGJ1dHRvbi1ib3gnO1xuICB9XG59XG4iLCIvKipcbiAqIENTUyBncmlkIGRlZmluaXRpb25zXG4gKlxuICovXG4uZ3JpZC1ncm91cCB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkOyB9XG4gIC5ncmlkLWdyb3VwIC5pbWFnZS1ib3gge1xuICAgIC1tcy1ncmlkLXJvdzogMTtcbiAgICAtbXMtZ3JpZC1yb3ctc3BhbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1hcmVhOiBpbWFnZS1ib3g7IH1cbiAgICAuZ3JpZC1ncm91cCAuaW1hZ2UtYm94IGltZyB7XG4gICAgICBtYXgtaGVpZ2h0OiAxMDBweDsgfVxuICAuZ3JpZC1ncm91cCAuZGVzY3JpcCB7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWFyZWE6IGRlc2NyaXA7IH1cbiAgLmdyaWQtZ3JvdXAgLmJ1dHRvbi1ib3gge1xuICAgIC1tcy1ncmlkLXJvdzogMTtcbiAgICAtbXMtZ3JpZC1yb3ctc3BhbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gICAgZ3JpZC1hcmVhOiBidXR0b24tYm94OyB9XG4gIC5ncmlkLWdyb3VwIC5xdWFudGl0eSB7XG4gICAgLW1zLWdyaWQtcm93OiAzO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICBncmlkLWFyZWE6IHF1YW50aXR5OyB9XG4gIC5ncmlkLWdyb3VwIC5wcmljZSB7XG4gICAgLW1zLWdyaWQtcm93OiAzO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNTtcbiAgICBncmlkLWFyZWE6IHByaWNlOyB9XG4gIC5ncmlkLWdyb3VwIC5wcm9kdWN0LXRpbGUge1xuICAgIGRpc3BsYXk6IC1tcy1ncmlkO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC1nYXA6IDE1cHg7XG4gICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMmZyIDE1cHggMmZyIDE1cHggNGZyIDE1cHggMWZyO1xuICAgIC1tcy1ncmlkLXJvd3M6IGF1dG8gMTVweCBhdXRvOyB9XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hdms-css-grid-product-tile',\n  templateUrl: './css-grid-product-tile.component.html',\n  styleUrls: ['./css-grid-product-tile.component.scss']\n})\nexport class CssGridProductTileComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"<!--Product Tile component-->\\n<div class=\\\"col col-48\\\">\\n  <div class=\\\"box-group\\\">\\n    <div class=\\\"box\\\"><h1>CSS Grid product tile component</h1></div>\\n  </div>\\n</div>\\n\\n<hdms-css-grid-product-tile></hdms-css-grid-product-tile>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2V4YW1wbGVzL3NyYy9hcHAvY3NzLWdyaWQtdXNlY2FzZXMvY3NzLWdyaWQtdXNlY2FzZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hdms-css-grid-usecases',\n  templateUrl: './css-grid-usecases.component.html',\n  styleUrls: ['./css-grid-usecases.component.scss']\n})\nexport class CssGridUsecasesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SvgIconModule, FormModule, TextModule, SearchFieldModule, ButtonModule } from '@hdms/shared/ui-core';\n\nimport { CssGridUsecasesComponent } from './css-grid-usecases.component';\nimport { CssGridProductTileComponent } from './css-grid-product-tile/css-grid-product-tile.component';\n\n@NgModule({\n  declarations: [CssGridUsecasesComponent, CssGridProductTileComponent],\n  imports: [NgbModule, SvgIconModule, FormModule, SearchFieldModule, TextModule, ButtonModule]\n})\nexport class CssGridUsecasesModule {}\n","module.exports = \"<div class=\\\"col col-48\\\">\\n  <div class=\\\"box-group\\\">\\n    <div class=\\\"box\\\"><h1 class=\\\"heading-lg\\\">HDMS Forms Example</h1></div>\\n  </div>\\n</div>\\n\\n<div class=\\\"col col-48\\\">\\n  <div class=\\\"box-group\\\">\\n    <div class=\\\"box\\\"><h2 class=\\\"heading-sm text-uppercase text-red\\\">Template driven form</h2></div>\\n  </div>\\n</div>\\n\\n<form #templateDrivenForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"onSubmit(templateDrivenForm.value)\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-48\\\">\\n        <ui-core-form-element label=\\\"Input Field (label top)\\\">\\n          <ui-core-input-field\\n            [(ngModel)]=\\\"fData.labelTop\\\"\\n            name=\\\"labelTop\\\"\\n            placeholder=\\\"Input placeholder\\\"\\n          ></ui-core-input-field>\\n        </ui-core-form-element>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-48\\\">\\n        <ui-core-form-element label=\\\"Input Field\\\" labelColumnClasses=\\\"box-w-1-3\\\" inputColumnClasses=\\\"box-w-2-3\\\">\\n          <ui-core-input-field\\n            [(ngModel)]=\\\"fData.labelLeft\\\"\\n            name=\\\"labelLeft\\\"\\n            placeholder=\\\"Input placeholder\\\"\\n            required\\n            minlength=\\\"10\\\"\\n            pattern=\\\"[a-zA-Z]*\\\"\\n          ></ui-core-input-field>\\n        </ui-core-form-element>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-48\\\">\\n        <ui-core-form-element\\n          label=\\\"Your address\\\"\\n          labelColumnClasses=\\\"box-w-1-3\\\"\\n          inputColumnClasses=\\\"box-w-2-3\\\"\\n          ngModelGroup=\\\"address\\\"\\n        >\\n          <div class=\\\"d-flex\\\">\\n            <div class=\\\"w-25 mr-2\\\">\\n              <ui-core-input-field\\n                [(ngModel)]=\\\"fData.postcode\\\"\\n                name=\\\"postcode\\\"\\n                placeholder=\\\"Postcode\\\"\\n                required\\n                minlength=\\\"5\\\"\\n                pattern=\\\"\\\\d*\\\"\\n              ></ui-core-input-field>\\n            </div>\\n            <div class=\\\"w-75\\\">\\n              <ui-core-input-field\\n                [(ngModel)]=\\\"fData.city\\\"\\n                name=\\\"city\\\"\\n                placeholder=\\\"City\\\"\\n                required\\n                minlength=\\\"4\\\"\\n                pattern=\\\"[a-zA-Z]*\\\"\\n              ></ui-core-input-field>\\n            </div>\\n          </div>\\n        </ui-core-form-element>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-24\\\">\\n        <ui-core-form-element label=\\\"Radio Group\\\">\\n          <ui-core-radiobutton\\n            *ngFor=\\\"let label of ['one', 'two', 'three', 'infinity']\\\"\\n            [(ngModel)]=\\\"fData.counter\\\"\\n            name=\\\"counter\\\"\\n            [value]=\\\"label\\\"\\n            required\\n          >\\n            {{ label }}\\n          </ui-core-radiobutton>\\n        </ui-core-form-element>\\n      </div>\\n      <div class=\\\"col-md-24\\\">\\n        <ui-core-form-element label=\\\"Checkbox Group\\\">\\n          <ui-core-checkbox\\n            *ngFor=\\\"let label of ['check 1', 'check 2']; index as i\\\"\\n            [(ngModel)]=\\\"fData['check' + i]\\\"\\n            [name]=\\\"'check-' + i\\\"\\n            uiCoreRequiredTrue\\n          >\\n            {{ label }}\\n          </ui-core-checkbox>\\n          <ui-core-checkbox [(ngModel)]=\\\"fData.check3\\\" name=\\\"check-3\\\" disabled>\\n            check 3\\n          </ui-core-checkbox>\\n        </ui-core-form-element>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-48\\\">\\n        <ui-core-form-element label=\\\"Text Area\\\">\\n          <ui-core-textarea\\n            [(ngModel)]=\\\"fData.message\\\"\\n            name=\\\"message\\\"\\n            rows=\\\"5\\\"\\n            expandOnFocus=\\\"true\\\"\\n            maxlength=\\\"100\\\"\\n            labelCharsLeft=\\\"You got {0} chars left.\\\"\\n            placeholder=\\\"Textarea placeholder\\\"\\n            required\\n          ></ui-core-textarea>\\n        </ui-core-form-element>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-16\\\">\\n        <div class=\\\"box-group\\\">\\n          <div class=\\\"box\\\">\\n            <button class=\\\"btn btn-secondary mt-0\\\">Submit</button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-32\\\">\\n        <div class=\\\"box-group\\\">\\n          <div class=\\\"box\\\">\\n            <p>form data:</p>\\n            <pre class=\\\"text\\\">{{ templateDrivenForm.value | json }} {{ templateDrivenForm.valid | json }}</pre>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\\n<div class=\\\"col col-48\\\">\\n  <div class=\\\"box-group\\\">\\n    <div class=\\\"box\\\"><h2 class=\\\"heading-sm text-uppercase text-red\\\">Reactive form</h2></div>\\n  </div>\\n</div>\\n\\n<form [formGroup]=\\\"reactiveForm\\\" novalidate (ngSubmit)=\\\"onSubmit(reactiveForm.value)\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-48\\\">\\n        <ui-core-form-element label=\\\"Input Field (label top)\\\">\\n          <ui-core-input-field\\n            name=\\\"rf_labelTop\\\"\\n            formControlName=\\\"labelTop\\\"\\n            placeholder=\\\"Input placeholder\\\"\\n          ></ui-core-input-field>\\n        </ui-core-form-element>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-48\\\">\\n        <ui-core-form-element label=\\\"Input Field\\\" labelColumnClasses=\\\"box-w-1-3\\\" inputColumnClasses=\\\"box-w-2-3\\\">\\n          <ui-core-input-field\\n            name=\\\"rf_labelLeft\\\"\\n            formControlName=\\\"labelLeft\\\"\\n            placeholder=\\\"Input placeholder\\\"\\n          ></ui-core-input-field>\\n        </ui-core-form-element>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-48\\\">\\n        <ui-core-form-element\\n          label=\\\"Your address\\\"\\n          labelColumnClasses=\\\"box-w-1-3\\\"\\n          inputColumnClasses=\\\"box-w-2-3\\\"\\n          formGroupName=\\\"address\\\"\\n        >\\n          <div class=\\\"d-flex\\\">\\n            <div class=\\\"w-25 mr-2\\\">\\n              <ui-core-input-field\\n                name=\\\"rf_postcode\\\"\\n                formControlName=\\\"postcode\\\"\\n                placeholder=\\\"Postcode\\\"\\n              ></ui-core-input-field>\\n            </div>\\n            <div class=\\\"w-75\\\">\\n              <ui-core-input-field name=\\\"rf_city\\\" formControlName=\\\"city\\\" placeholder=\\\"City\\\"></ui-core-input-field>\\n            </div>\\n          </div>\\n        </ui-core-form-element>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-24\\\">\\n        <ui-core-form-element label=\\\"Radio Group\\\">\\n          <ui-core-radiobutton\\n            *ngFor=\\\"let label of ['one', 'two', 'three', 'infinity']\\\"\\n            name=\\\"rf_counter\\\"\\n            formControlName=\\\"counter\\\"\\n            [value]=\\\"label\\\"\\n          >\\n            {{ label }}\\n          </ui-core-radiobutton>\\n        </ui-core-form-element>\\n      </div>\\n      <div class=\\\"col-md-24\\\">\\n        <ui-core-form-element label=\\\"Checkbox Group\\\">\\n          <ui-core-checkbox\\n            *ngFor=\\\"let label of ['check 1', 'check 2', 'check 3']; index as i\\\"\\n            [name]=\\\"'rf_check-' + i\\\"\\n            [formControlName]=\\\"'check' + i\\\"\\n          >\\n            {{ label }}\\n          </ui-core-checkbox>\\n        </ui-core-form-element>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-48\\\">\\n        <ui-core-form-element label=\\\"Text Area\\\">\\n          <ui-core-textarea\\n            name=\\\"rf_message\\\"\\n            formControlName=\\\"message\\\"\\n            rows=\\\"5\\\"\\n            expandOnFocus=\\\"true\\\"\\n            maxlength=\\\"100\\\"\\n            labelCharsLeft=\\\"You got {0} chars left.\\\"\\n            placeholder=\\\"Textarea placeholder\\\"\\n          ></ui-core-textarea>\\n        </ui-core-form-element>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-16\\\">\\n        <div class=\\\"box-group\\\">\\n          <div class=\\\"box\\\">\\n            <button class=\\\"btn btn-secondary mt-0\\\">Submit</button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-32\\\">\\n        <div class=\\\"box-group\\\">\\n          <div class=\\\"box\\\">\\n            <p>form data:</p>\\n            <pre class=\\\"text\\\">{{ reactiveForm.value | json }} {{ reactiveForm.valid | json }}</pre>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidators } from '@hdms/shared/ui-core';\n\n@Component({\n  selector: 'hdms-forms-example',\n  templateUrl: './forms-example.component.html'\n})\nexport class FormsExampleComponent {\n  readonly fData: any = {\n    labelTop: 'Prefilled text',\n    labelLeft: '',\n    postcode: '',\n    city: '',\n    message: '',\n    counter: 'two',\n    check0: false,\n    check1: true,\n    check2: false\n  };\n\n  reactiveForm: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.reactiveForm = fb.group({\n      labelTop: [this.fData.labelTop],\n      labelLeft: [\n        this.fData.labelLeft,\n        [Validators.required, Validators.minLength(10), Validators.pattern(/[a-zA-Z]*/)]\n      ],\n      address: fb.group({\n        postcode: [\n          this.fData.postcode,\n          [Validators.required, Validators.minLength(5), Validators.maxLength(6), Validators.pattern('[0-9]*')]\n        ],\n        city: [this.fData.city, [Validators.required, Validators.minLength(4), Validators.pattern(/[a-zA-Z]*/)]]\n      }),\n      counter: [this.fData.counter, [Validators.required]],\n      check0: [this.fData.check0, [CustomValidators.requiredTrue]],\n      check1: [this.fData.check1, [CustomValidators.requiredTrue]],\n      check2: [{ value: this.fData.check2, disabled: true }],\n      message: [this.fData.message, [Validators.required]]\n    });\n  }\n\n  onSubmit(value: any) {\n    console.log(value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsExampleComponent } from './forms-example.component';\nimport { FormModule } from '@hdms/shared/ui-core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [FormsExampleComponent],\n  imports: [FormModule, CommonModule]\n})\nexport class FormsExampleModule {}\n","module.exports = \"<h2>GraphQL Showcase Service Component</h2>\\n<p>\\n  This example demonstrates how share queries and their types between components using a service.\\n</p>\\n<div *ngIf=\\\"loading\\\">\\n  Loading...\\n</div>\\n<table *ngIf=\\\"films\\\">\\n  <thead>\\n    <tr>\\n      <th>Episode</th>\\n      <th>Title</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let film of films\\\">\\n      <td>{{ film.episodeId }}</td>\\n      <td>{{ film.title }}</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","module.exports = \":host {\\n  display: block;\\n  padding: 10px;\\n  padding: 0.625rem;\\n  margin-top: 10px;\\n  margin-top: 0.625rem;\\n  margin-bottom: 10px;\\n  margin-bottom: 0.625rem;\\n  border: dashed 2px lightgrey;\\n  border: dashed 0.125rem lightgrey; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tZWwvaG9sbmcvZGV2L2xheW91dC9oZG1zL2FwcHMvZXhhbXBsZXMvc3JjL2FwcC9ncmFwaHFsLWV4YW1wbGUvY29tcG9uZW50cy9ncmFwaHFsLXNob3djYXNlLXNlcnZpY2UvZ3JhcGhxbC1zaG93Y2FzZS1zZXJ2aWNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGFBQWE7RUFBYixpQkFBYTtFQUNiLGdCQUFnQjtFQUFoQixvQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQW5CLHVCQUFtQjtFQUNuQiw0QkFBNEI7RUFBNUIsaUNBQTRCLEVBQUEiLCJmaWxlIjoiYXBwcy9leGFtcGxlcy9zcmMvYXBwL2dyYXBocWwtZXhhbXBsZS9jb21wb25lbnRzL2dyYXBocWwtc2hvd2Nhc2Utc2VydmljZS9ncmFwaHFsLXNob3djYXNlLXNlcnZpY2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAxMHB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBib3JkZXI6IGRhc2hlZCAycHggbGlnaHRncmV5O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AllFilmsGQL, Film } from '../../services/all-films.graphql';\n\n@Component({\n  selector: 'hdms-graphql-showcase-service',\n  templateUrl: './graphql-showcase-service.component.html',\n  styleUrls: ['./graphql-showcase-service.component.scss']\n})\nexport class GraphqlShowcaseServiceComponent implements OnInit {\n  films: Film[];\n  loading = true;\n\n  constructor(private readonly allfilms: AllFilmsGQL) {}\n\n  ngOnInit() {\n    /*\n     * The syntax for accessing data via a GraphQL service differes from\n     * accessing data via the Apollo client directly. Instead of .watchQuery(...)\n     * the service exposes the methods .fetch(...) for fetching data once and\n     * .watch() for fetching data whenever it changes. Both methods accept\n     * variables as a first parameter that get passed to the query.\n     * See: https://www.apollographql.com/docs/angular/basics/services\n     */\n    this.allfilms\n      .watch({\n        first: 4\n      })\n      .valueChanges.subscribe(({ data, loading }) => {\n        this.loading = loading;\n        this.films = data.allFilms;\n      });\n  }\n}\n","module.exports = \"<h2>GraphQL Showcase Component</h2>\\n<p>This example demonstrates how to query specifiy data in a component.</p>\\n<div *ngIf=\\\"loading\\\">\\n  Loading...\\n</div>\\n<table *ngIf=\\\"films\\\">\\n  <thead>\\n    <tr>\\n      <th>Episode</th>\\n      <th>Title</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let film of films\\\">\\n      <td>{{ film.episodeId }}</td>\\n      <td>{{ film.title }}</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","module.exports = \":host {\\n  display: block;\\n  padding: 10px;\\n  padding: 0.625rem;\\n  margin-top: 10px;\\n  margin-top: 0.625rem;\\n  margin-bottom: 10px;\\n  margin-bottom: 0.625rem;\\n  border: dashed 2px lightgrey;\\n  border: dashed 0.125rem lightgrey; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tZWwvaG9sbmcvZGV2L2xheW91dC9oZG1zL2FwcHMvZXhhbXBsZXMvc3JjL2FwcC9ncmFwaHFsLWV4YW1wbGUvY29tcG9uZW50cy9ncmFwaHFsLXNob3djYXNlL2dyYXBocWwtc2hvd2Nhc2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsYUFBYTtFQUFiLGlCQUFhO0VBQ2IsZ0JBQWdCO0VBQWhCLG9CQUFnQjtFQUNoQixtQkFBbUI7RUFBbkIsdUJBQW1CO0VBQ25CLDRCQUE0QjtFQUE1QixpQ0FBNEIsRUFBQSIsImZpbGUiOiJhcHBzL2V4YW1wbGVzL3NyYy9hcHAvZ3JhcGhxbC1leGFtcGxlL2NvbXBvbmVudHMvZ3JhcGhxbC1zaG93Y2FzZS9ncmFwaHFsLXNob3djYXNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgYm9yZGVyOiBkYXNoZWQgMnB4IGxpZ2h0Z3JleTtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\n\n/* Query */\n\nconst FILMS_LIST_QUERY = gql`\n  query AllFilmsGQL {\n    allFilms(first: 4, orderBy: episodeId_ASC) {\n      episodeId\n      title\n    }\n  }\n`;\n\n/* Type definitions */\ninterface Film {\n  episodeId: number;\n  title: string;\n}\n\ninterface Response {\n  allFilms: Film[];\n}\n\n/* Component */\n@Component({\n  selector: 'hdms-graphql-showcase',\n  templateUrl: './graphql-showcase.component.html',\n  styleUrls: ['./graphql-showcase.component.scss']\n})\nexport class GraphqlShowcaseComponent implements OnInit {\n  films: Film[];\n  loading = true;\n\n  constructor(private readonly apollo: Apollo) {}\n\n  ngOnInit() {\n    this.apollo\n      .watchQuery<Response>({\n        query: FILMS_LIST_QUERY\n      })\n      .valueChanges.subscribe(({ data, loading }) => {\n        this.loading = loading;\n        this.films = data.allFilms;\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GraphQLModule } from './graphql.module';\nimport { GraphqlShowcaseComponent } from './components/graphql-showcase/graphql-showcase.component';\nimport { GraphqlShowcaseServiceComponent } from './components/graphql-showcase-service/graphql-showcase-service.component';\nimport { GraphqlExampleComponent } from './pages/graphql-example/graphql-example.component';\n\n@NgModule({\n  declarations: [GraphqlShowcaseComponent, GraphqlShowcaseServiceComponent, GraphqlExampleComponent],\n  imports: [CommonModule, GraphQLModule]\n})\nexport class GraphqlExampleModule {}\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { Apollo, ApolloModule, APOLLO_OPTIONS } from 'apollo-angular';\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { environment } from '../../environments/environment';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApolloLink, concat } from 'apollo-link';\n\n/*\n * A middleware can be used to inspect and modify a GraphQL requests before\n * they are send to the server. For further information see\n * https://www.apollographql.com/docs/angular/basics/network-layer.\n * Note: To modify the outgoing http request (e.g. set headers) use\n * apollo-link-context: https://www.apollographql.com/docs/link/links/context.\n * Alternatily the angular HTTPInterceptor can be used for that case\n * as apollo-angular-link-http used the angular HTTPClientModule internally.\n */\nconst middleware = new ApolloLink((operation, forward) => {\n  console.log('APOLLO MIDDLEWARE INTERCEPTION', operation);\n  return forward(operation);\n});\n\n/*\n * Creates the actual Apollo clients for each defined endpoint.\n * Uses http-link to make GraphQL requests via HTTP and injects\n * a middleware to log the outgoing request.\n */\nconst createApollo = (httpLink: HttpLink) => {\n  return {\n    /* Define the caching method */\n    cache: new InMemoryCache(),\n    /*\n     * Use the httpLink to connect to the GraphQL server via HTTP.\n     * This is the place were middlewares and afterwares can be defined.\n     */\n    link: concat(\n      /*\n       * Add the middleware and http link to the apollo client.\n       * Note: The middleware needs to be added before the httpLink\n       * as the httpLink is a terminating link.\n       */\n      middleware,\n      httpLink.create({\n        uri: environment['graphqlEndpoint']\n      })\n    )\n  };\n};\n\n@NgModule({\n  imports: [HttpClientModule],\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    {\n      /*\n       * APOLLO_OPTIONS is an AngularInjection token that is\n       * used to pass dependency injection tokens to\n       * the Apollo Client. The token will be generated\n       * before any service / component will be intantiated. Therefore,\n       * services and components will use the already configured\n       * Apollo client.\n       */\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink]\n    }\n  ]\n})\nexport class GraphQLModule {}\n","module.exports = \"<h1>GraphQL Components</h1>\\n\\n<p>\\n  For further information go to the confluence\\n  <a href=\\\"https://confluence.hilti.com/pages/viewpage.action?pageId=56439882\\\">\\n    documentation\\n  </a>\\n  .\\n</p>\\n\\n<hdms-graphql-showcase></hdms-graphql-showcase>\\n<hdms-graphql-showcase-service></hdms-graphql-showcase-service>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hdms-graphql-example',\n  templateUrl: './graphql-example.component.html',\n  styleUrls: []\n})\nexport class GraphqlExampleComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Injectable } from '@angular/core';\nimport { Query, Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\n\n/* Export type definitions for the response */\nexport interface Film {\n  episodeId: number;\n  title: string;\n}\n\nexport interface Response {\n  allFilms: Film[];\n}\n\n/*\n * Extend the apollo angular Query service,\n * See: https://www.apollographql.com/docs/angular/basics/services\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllFilmsGQL extends Query<Response> {\n  document = gql`\n    query getAllFilms($first: Int!) {\n      allFilms(first: $first) {\n        episodeId\n        title\n      }\n    }\n  `;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './pages/home/home.component';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule]\n})\nexport class HomeModule {}\n","module.exports = \"<h1>HDMS Example App</h1>\\n<p>\\n  This app serves as a example project to showcase the use of different concepts within the HDMS project\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hdms-home',\n  templateUrl: './home.component.html',\n  styleUrls: []\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h3>\\n    Angular presentation of mock data in dummy component\\n  </h3>\\n</div>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-48\\\">\\n      <div class=\\\"box-group\\\">\\n        <div class=\\\"box\\\">\\n          <a *ngFor=\\\"let item of priceResponseData\\\">\\n            <div class=\\\"pull-left\\\">\\n              <p class=\\\"list-group-item-text\\\">Item has material number {{ item.materialNumber }}</p>\\n            </div>\\n            <span class=\\\"pull-right\\\">\\n              <p>\\n                Fleet price is {{ item.fleet.formattedMonthlyValue }} {{ item.fleet.currencyISO }} charged\\n                {{ item.fleet.priceType }}\\n              </p>\\n              <p>\\n                Standard price is {{ item.standard.formattedValue }} {{ item.standard.currencyISO }} charged UPFRONT\\n              </p>\\n              <hr />\\n            </span>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".mock-example {\\n  color: inherit; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tZWwvaG9sbmcvZGV2L2xheW91dC9oZG1zL2FwcHMvZXhhbXBsZXMvc3JjL2FwcC9tb2NrLWV4YW1wbGUvbW9jay1leGFtcGxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYyxFQUFBIiwiZmlsZSI6ImFwcHMvZXhhbXBsZXMvc3JjL2FwcC9tb2NrLWV4YW1wbGUvbW9jay1leGFtcGxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vY2stZXhhbXBsZSB7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { MockExampleService } from './mock-example.service';\n\n@Component({\n  selector: 'hdms-mock-example',\n  templateUrl: './mock-example.component.html',\n  styleUrls: ['./mock-example.component.scss']\n})\nexport class MockExampleComponent implements OnInit {\n  priceResponseData = [];\n  errorMessageData = [];\n\n  constructor(pricingService: MockExampleService) {\n    this.priceResponseData = pricingService.getPrices();\n    this.errorMessageData = pricingService.getErrors();\n  }\n\n  ngOnInit() {}\n}\n","export const errorMessages = [];\n\nexport const infoMessages = [];\n\nexport const priceResponse = [\n  {\n    materialNumber: '2186920',\n    fleet: {\n      currencyIso: 'USD',\n      priceType: 'MONTHLY',\n      quantity: '1',\n      priceUnit: 'Each',\n      formattedUpfrontValue: '$0.00',\n      formattedMonthlyValue: '$7.00',\n      total: {\n        quantity: '1',\n        formattedUpfrontValue: '$0.00',\n        formattedMonthlyValue: '$7.00'\n      }\n    },\n    standard: {\n      currencyIso: 'USD',\n      formattedValue: '$159.00',\n      priceType: 'NORMAL',\n      quantity: '1',\n      priceUnit: 'Each',\n      total: { value: 159.0, formattedValue: '$159.00', quantity: '1' }\n    }\n  },\n  {\n    materialNumber: '2173219',\n    fleet: {\n      currencyIso: 'USD',\n      priceType: 'MONTHLY',\n      quantity: '1',\n      priceUnit: 'Each',\n      formattedUpfrontValue: '$0.00',\n      formattedMonthlyValue: '$30.00',\n      total: {\n        quantity: '1',\n        formattedUpfrontValue: '$0.00',\n        formattedMonthlyValue: '$30.00'\n      }\n    },\n    standard: {\n      currencyIso: 'USD',\n      formattedValue: '$899.00',\n      priceType: 'NORMAL',\n      quantity: '1',\n      priceUnit: 'Each',\n      total: { value: 899.0, formattedValue: '$899.00', quantity: '1' }\n    }\n  },\n  {\n    materialNumber: '2181024',\n    fleet: {\n      currencyIso: 'USD',\n      priceType: 'MONTHLY',\n      quantity: '1',\n      priceUnit: 'Each',\n      formattedUpfrontValue: '$0.00',\n      formattedMonthlyValue: '$69.15',\n      total: {\n        quantity: '1',\n        formattedUpfrontValue: '$0.00',\n        formattedMonthlyValue: '$69.15'\n      }\n    },\n    standard: {\n      currencyIso: 'USD',\n      formattedValue: '$2,349.00',\n      priceType: 'NORMAL',\n      quantity: '1',\n      priceUnit: 'Each',\n      total: { value: 2349.0, formattedValue: '$2,349.00', quantity: '1' }\n    }\n  },\n  {\n    materialNumber: '2149902',\n    fleet: {\n      currencyIso: 'USD',\n      priceType: 'MONTHLY',\n      quantity: '1',\n      priceUnit: 'Each',\n      formattedUpfrontValue: '$0.00',\n      formattedMonthlyValue: '$10.00',\n      total: {\n        quantity: '1',\n        formattedUpfrontValue: '$0.00',\n        formattedMonthlyValue: '$10.00'\n      }\n    },\n    standard: {\n      currencyIso: 'USD',\n      formattedValue: '$249.00',\n      priceType: 'NORMAL',\n      quantity: '1',\n      priceUnit: 'Each',\n      total: { value: 249.0, formattedValue: '$249.00', quantity: '1' }\n    }\n  },\n  {\n    materialNumber: '2152385',\n    fleet: {\n      currencyIso: 'USD',\n      priceType: 'MONTHLY',\n      quantity: '1',\n      priceUnit: 'Each',\n      formattedUpfrontValue: '$0.00',\n      formattedMonthlyValue: '$29.60',\n      total: {\n        quantity: '1',\n        formattedUpfrontValue: '$0.00',\n        formattedMonthlyValue: '$29.60'\n      }\n    },\n    standard: {\n      currencyIso: 'USD',\n      formattedValue: '$769.00',\n      priceType: 'NORMAL',\n      quantity: '1',\n      priceUnit: 'Each',\n      total: { value: 769.0, formattedValue: '$769.00', quantity: '1' }\n    }\n  },\n  {\n    materialNumber: '2191223',\n    fleet: {\n      currencyIso: 'USD',\n      priceType: 'MONTHLY',\n      quantity: '1',\n      priceUnit: 'Each',\n      formattedUpfrontValue: '$0.00',\n      formattedMonthlyValue: '$36.00',\n      total: {\n        quantity: '1',\n        formattedUpfrontValue: '$0.00',\n        formattedMonthlyValue: '$36.00'\n      }\n    },\n    standard: {\n      currencyIso: 'USD',\n      formattedValue: '$1,149.00',\n      priceType: 'NORMAL',\n      quantity: '1',\n      priceUnit: 'Each',\n      total: { value: 1149.0, formattedValue: '$1,149.00', quantity: '1' }\n    }\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MockExampleComponent } from './mock-example.component';\n\n@NgModule({\n  declarations: [MockExampleComponent],\n  imports: [CommonModule]\n})\nexport class MockExampleModule {}\n","import { Injectable } from '@angular/core';\nimport { priceResponse, errorMessages } from './mock-example.mock';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockExampleService {\n  getPrices() {\n    return priceResponse;\n  }\n  getErrors() {\n    return errorMessages;\n  }\n}\n","module.exports = \"<h1>Pipe Showcase</h1>\\n<p>This component showcases different pipes within the hdms workspace.</p>\\n<table dir=\\\"ltr\\\" width=\\\"500\\\" border=\\\"1\\\">\\n  <thead>\\n    <tr>\\n      <th>Pipe</th>\\n      <th>Example</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <td>Currency Format</td>\\n      <td>\\n        <div>Global pattern: {{ 12223.457 | currencyFormat }}</div>\\n        <div>Argument pattern: {{ 12223.457 | currencyFormat: 'USD ## ###.##' }}</div>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hdms-pipes-showcase',\n  templateUrl: './pipes-showcase.component.html',\n  styleUrls: []\n})\nexport class PipesShowcaseComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PipesShowcaseComponent } from './pipes-showcase.component';\nimport { CurrencyFormatModule } from '@hdms/shared/util-core';\n\n@NgModule({\n  declarations: [PipesShowcaseComponent],\n  imports: [CommonModule, CurrencyFormatModule]\n})\nexport class PipeShowcaseModule {}\n","import { WindowRefService } from '@hdms/shared/util-core';\nimport * as i18nextBackend from 'i18next-xhr-backend';\nimport { ITranslationService, I18NEXT_SERVICE, I18NextModule } from 'angular-i18next';\nimport { NgModule, APP_INITIALIZER, LOCALE_ID } from '@angular/core';\n\nexport function localeIdFactory(i18next: ITranslationService) {\n  return i18next.language;\n}\n\nexport function appInit(i18next: ITranslationService, windowRef: WindowRefService) {\n  return () => {\n    /**\n     * In this example application the current application\n     * language is passed as a parameter via the window object.\n     * Hovever when using i18next in a production application\n     * more sophisticated language detection methods can be used\n     * as e.g. deriving language from browser language.\n     */\n    const appWindow = windowRef.nativeWindow;\n    const appLang = appWindow['__app_lang'] || 'en';\n\n    /**\n     * Initialize i18next.\n     * More options can be found at https://www.i18next.com/overview/configuration-options\n     * such as defining a fallback language.\n     */\n    return i18next.use(i18nextBackend).init({\n      /**\n       * Whitelist only current used language. For production\n       * a more sophisticated whitelist might be used, as e.g.\n       * whitelist all languages that have corresponding language files\n       * in the assets folder.\n       */\n      whitelist: [appLang],\n      lng: appLang,\n      returnEmptyString: false,\n      appendNamespaceToMissingKey: true,\n      backend: {\n        /**\n         * Here we define a mapping between our namespace and\n         * our file structure and naming convention.\n         */\n        loadPath: 'assets/i18n/{{ns}}.{{lng}}.json'\n      },\n      /**\n       * Here we define the namespaces that we want to use.\n       * In this example we only have one namespace, that\n       * of our application.\n       */\n      ns: ['examples']\n    });\n  };\n}\n\nexport const I18N_PROVIDERS = [\n  /**\n   * Initialize app only after translations have loaded.\n   * See: https://github.com/Romanchuk/angular-i18next#initialize-i18next-before-angular-application\n   */\n  {\n    provide: APP_INITIALIZER,\n    useFactory: appInit,\n    deps: [I18NEXT_SERVICE, WindowRefService],\n    multi: true\n  },\n  {\n    provide: LOCALE_ID,\n    deps: [I18NEXT_SERVICE],\n    useFactory: localeIdFactory\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [I18NextModule.forRoot()],\n  providers: [I18N_PROVIDERS],\n  exports: [I18NextModule]\n})\nexport class I18NextTranslationModule {}\n","module.exports = \"<h1>This page demonstrates the usage of i18next within HDMS applications</h1>\\n\\n<p>Current language: {{ getLanguage() }}</p>\\n\\n<h2>Translation Examples</h2>\\n\\n<h3 class=\\\"example-headline\\\">Usage in Pipes</h3>\\n<p>{{ 'examples:examples.dummy' | i18next }}</p>\\n\\n<h3 class=\\\"example-headline\\\">Usage with parameters and pipes</h3>\\n<p>{{ 'examples:examples.parameters' | i18next: { name: 'Joe', time: '04:06' } }}</p>\\n\\n<h3 class=\\\"example-headline\\\">Usage with richtext</h3>\\n<p [innerHTML]=\\\"'examples:examples.richtext' | i18next: { name: 'Joe', time: '04:06' }\\\"></p>\\n\\n<h3 class=\\\"example-headline\\\">Usage with plural</h3>\\n<p>{{ 'examples:examples.plural' | i18next: { count: count } }}</p>\\n<button (click)=\\\"decreaseCount()\\\" [disabled]=\\\"count === 0\\\">-</button>\\n<button (click)=\\\"increaseCount()\\\" [disabled]=\\\"count === 2\\\">+</button>\\n\\n<h3 class=\\\"example-headline\\\">Usage with gender</h3>\\n<p>{{ 'examples:examples.gender' | i18next: { context: gender } }}</p>\\n<button (click)=\\\"setGender('male')\\\" [disabled]=\\\"gender === 'male'\\\">Set male</button>\\n<button (click)=\\\"setGender('female')\\\" [disabled]=\\\"gender === 'female'\\\">Set female</button>\\n<button (click)=\\\"setGender('')\\\" [disabled]=\\\"gender === ''\\\">Set none</button>\\n\\n<h3 class=\\\"example-headline\\\">Usage within typescript</h3>\\n<p>{{ languageString }}</p>\\n\\n<h3 class=\\\"example-headline\\\">Documentation</h3>\\nSee official\\n<a href=\\\"https://www.i18next.com/\\\">i18next documentation</a>\\nfor more details.\\n\"","module.exports = \":host .example-headline {\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  color: green; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tZWwvaG9sbmcvZGV2L2xheW91dC9oZG1zL2FwcHMvZXhhbXBsZXMvc3JjL2FwcC90cmFuc2xhdGlvbi90cmFuc2xhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGVBQWU7RUFBZixtQkFBZTtFQUNmLFlBQVksRUFBQSIsImZpbGUiOiJhcHBzL2V4YW1wbGVzL3NyYy9hcHAvdHJhbnNsYXRpb24vdHJhbnNsYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIC5leGFtcGxlLWhlYWRsaW5lIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgY29sb3I6IGdyZWVuO1xuICB9XG59XG4iXX0= */\"","import { I18NEXT_SERVICE, ITranslationService, I18NextPipe } from 'angular-i18next';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'hdms-translation',\n  templateUrl: './translation.component.html',\n  styleUrls: ['./translation.component.scss']\n})\nexport class TranslationComponent implements OnInit {\n  count = 0;\n  gender = 'male';\n  languageString: string;\n\n  constructor(\n    @Inject(I18NEXT_SERVICE) private readonly i18NextService: ITranslationService,\n    private readonly i18NextPipe: I18NextPipe\n  ) {}\n\n  ngOnInit() {\n    this.languageString = this.i18NextPipe.transform('examples:examples.dummy');\n  }\n\n  getLanguage() {\n    return this.i18NextService.language;\n  }\n\n  increaseCount() {\n    this.count += 1;\n  }\n\n  decreaseCount() {\n    this.count -= 1;\n  }\n\n  setGender(gender) {\n    this.gender = gender;\n  }\n}\n","import { I18NextTranslationModule } from './i18next-translation.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\n\nimport { TranslationComponent } from './translation.component';\n\n@NgModule({\n  declarations: [TranslationComponent],\n  imports: [CommonModule, I18NextTranslationModule],\n  providers: []\n})\nexport class TranslationModule {}\n","module.exports = \"<h1>Window Object Reference</h1>\\n<p>\\n  This component showcases how to use the windowRefService from the shared/util-core lib.\\n</p>\\n{{ _window }}\\n\"","import { Component, OnInit } from '@angular/core';\nimport { WindowRefService } from '@hdms/shared/util-core';\n\n@Component({\n  selector: 'hdms-window-ref',\n  templateUrl: './window-ref.component.html',\n  styleUrls: []\n})\nexport class WindowRefComponent implements OnInit {\n  _window: any;\n\n  constructor(private readonly windowRefService: WindowRefService) {}\n\n  ngOnInit() {\n    this._window = this.windowRefService.nativeWindow;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WindowRefComponent } from './window-ref.component';\n\n@NgModule({\n  declarations: [WindowRefComponent],\n  imports: [CommonModule]\n})\nexport class WindowRefModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  graphqlEndpoint: 'https://swapi.graph.cool/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}